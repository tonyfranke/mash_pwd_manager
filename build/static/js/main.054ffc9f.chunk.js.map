{"version":3,"sources":["utilities/calculatePassword.service.js","utilities/constants.js","utilities/indexeddb.service.js","utilities/defaultTooltipOptions.service.js","components/home/PasswordDemo/passwordDemo.component.js","components/home/home.component.js","redux/actions/index.js","redux/constants/action-types.js","components/password/password.component.js","components/login/login.component.js","components/register/register.component.js","components/header/header.component.js","components/footer/footer.component.js","components/services/serviceDetails/pickList/pickList.component.js","components/services/serviceDetails/serviceDetails.component.js","components/services/serviceCard/serviceCard.component.js","utilities/import-export.service.js","utilities/request.service.js","components/services/controlBar/controlBar.component.js","components/services/services.component.js","components/imprint/imprint.component.js","components/timer/timer.component.js","components/user/user.component.js","components/App.js","serviceWorker.js","redux/reducers/rootReducer.js","redux/store/store.js","index.js"],"names":["CHAR_SET_LETTERS","CHAR_SET_CAP_LETTERS","CHAR_SET_NUMBERS","CHAR_SET_SPEC_CHARS","calculatePassword","masterpassword","service","Promise","resolve","reject","a","generatePBKDF2Hash","name","account","version","length","rndBytes","hash","pwd","generatePassword","lowercase","uppercase","numbers","specialChars","whitelist","blacklist","join","salt","crypto","err","rand","random_seed","template","Array","i","rng","random","Math","floor","createTemplate","charSet","concat","createCharSet","iterator","splice","indexOf","removeBlacklistedChars","database","defaultTooltipOptions","position","event","showDelay","hideDelay","PasswordDemo","props","handleChange","target","setState","parseInt","value","onChangeSlider","e","newValue","nodeName","handleGeneratePassword","state","password","servicePassword","calculated","console","error","handleCopyToClipboard","el","document","createElement","body","appendChild","select","execCommand","removeChild","handleClearPassword","className","type","this","onChange","placeholder","readOnly","icon","onClick","tooltip","tooltipOptions","label","style","marginRight","React","Component","Home","loginVisible","registerVisible","loginUser","payload","logoutUser","addService","changeService","deleteService","showMessage","sortServices","storeService","storeRequest","transaction","objectStore","put","onsuccess","result","onerror","key","request","delete","setDatabase","db","Password","handleEnter","which","startOffline","user","username","isAuthenticated","clientSessionProof","isOfflineMode","window","indexedDB","open","log","onupgradeneeded","createObjectStore","keyPath","autoIncrement","services","openCursor","cursor","id","url","push","continue","setServices","hideModal","history","onKeyUp","buttonLabel","connect","dispatch","sortDir","withRouter","Login","login","clientEphemeral","srp","axios","step","clientPublicEphemeral","public","headers","responseStepOne","data","stepOneComplete","clientSession","secret","serverEphemeral","toString","proof","responseStepTwo","stepTwoComplete","serverSessionProof","mail","char","severity","summary","detail","content","Register","register","match","passwordMatch","verifier","email","response","registered","showModal","Header","logout","passwordDialogVisible","header","visible","modal","onHide","PickList","handleItemHighlightWhite","highlight_white","temp","handleItemHighlightBlack","highlight_black","handleSingleItemWhiteBlack","tempWhite","source","tempBlack","innerHTML","handleOnChange","handleSingleItemBlackWhite","handleChangeAllItems","w2b","handleCharListChanges","newService","map","ServiceDetails","handleSubmit","sendSaveRequest","saved","handleDialogHide","handleSubmitOffline","min","max","width","onLabel","offLabel","checked","ownProps","ServiceCard","handleDialogShow","serviceDetailsVisible","handleDeleteService","deleted","handleDeleteServiceOffline","deleteServiceIndexedDB","handleChangeInputType","inputTypeIsPassword","inputType","showButtonIcon","prevState","newState","items","handleOpenURL","footer","copyButtonIcon","command","separator","onContextMenu","cm","show","title","model","ref","find","element","readFile","file","reader","FileReader","readAsBinaryString","onload","fileContent","JSON","parse","sendPostRequest","success","ControlBar","handleInputTextChanges","keyword","displayedServices","includes","filterServices","openUploadDialog","toggleDropdownMenu","fileUploadInput","current","click","import","files","importOffline","export","dataStr","encodeURIComponent","stringify","downloadAnchorNode","setAttribute","remove","exportServices","sortDisplayedServices","handleClickOutsideDropdown","parentElement","matches","dropdownContent","classList","contains","add","createRef","addEventListener","removeEventListener","accept","hidden","Services","blockScroll","Imprint","Timer","onAction","onActive","onIdle","idleTimer","remainingTime","debounce","timeout","User","update","currPassword","currkey","currVerifier","newSalt","newKey","newVerifier","updateUserProof","disabled","App","nextProps","message","growl","exact","path","component","to","src","integrity","crossOrigin","Boolean","location","hostname","initState","messages","rootReducer","action","Object","assign","index","findIndex","indexDS","leftArray","slice","rightArray","leftArrayDS","rightArrayDS","sort","b","toLowerCase","reverse","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.054ffc9f.chunk.js","sourcesContent":["import * as crypto from 'crypto';\r\nimport * as random_seed from 'random-seed';\r\n\r\nconst CHAR_SET_LETTERS = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\r\nconst CHAR_SET_CAP_LETTERS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\nconst CHAR_SET_NUMBERS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\nconst CHAR_SET_SPEC_CHARS = ['!', '\"', '#', '$', '%', '&', '`', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '{', '|', '}', `~`];\r\n\r\n\r\n\r\nexport function calculatePassword(masterpassword, service) {\r\n  return new Promise(async (resolve, reject) => {\r\n    let hash = await generatePBKDF2Hash(masterpassword, (service.name + service.account + service.version + service.length + service.rndBytes));\r\n\r\n    if (hash) {\r\n      //seedPRNG(hash);\r\n      let pwd = generatePassword(hash, service.length, service.lowercase, service.uppercase, service.numbers, service.specialChars, service.whitelist, service.blacklist);\r\n      resolve(pwd.join(''));\r\n    }\r\n  });\r\n}\r\n\r\nfunction generatePBKDF2Hash(masterpassword, salt) {\r\n  return new Promise((resolve, reject) => {\r\n    crypto.pbkdf2(masterpassword, salt, 100000, 128, 'sha256', (err, hash) => {\r\n      if (err) {\r\n        resolve(null);\r\n      }\r\n      resolve(hash);\r\n    });\r\n  });\r\n}\r\n\r\nfunction removeBlacklistedChars(blacklist, charSet) {\r\n  for (const iterator of blacklist) {\r\n    charSet.splice(charSet.indexOf(iterator), 1)\r\n  }\r\n}\r\n\r\nfunction generatePassword(hash, length, lowercase, uppercase, numbers, specialChars, whitelist, blacklist) {\r\n  let rand = random_seed(hash);\r\n  let template = createTemplate(length, lowercase, uppercase, numbers, specialChars, rand);\r\n  let charSet = createCharSet(lowercase, uppercase, numbers, specialChars);\r\n\r\n  removeBlacklistedChars(blacklist, charSet);\r\n\r\n  for (let i = 0; i < template.length; i++) {\r\n    let rng = rand.random();\r\n    switch (template[i]) {\r\n      case '':\r\n        template[i] = charSet[Math.floor(rng * charSet.length)];\r\n        break;\r\n      case 'lc':\r\n        template[i] = CHAR_SET_LETTERS[Math.floor(rng * CHAR_SET_LETTERS.length)];\r\n        break;\r\n      case 'uc':\r\n        template[i] = CHAR_SET_CAP_LETTERS[Math.floor(rng * CHAR_SET_CAP_LETTERS.length)];\r\n        break;\r\n      case 'num':\r\n        template[i] = CHAR_SET_NUMBERS[Math.floor(rng * CHAR_SET_NUMBERS.length)];\r\n        break;\r\n      case 'sc':\r\n        template[i] = whitelist[Math.floor(rng * whitelist.length)];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return template\r\n}\r\n\r\nfunction createTemplate(length, lowercase, uppercase, numbers, specialChars, rand) {\r\n  const template = new Array(length);\r\n\r\n  for (let i = 0; i < template.length; i++) {\r\n    template[i] = '';\r\n  }\r\n\r\n  if (lowercase) {\r\n    let rng = rand.random();\r\n    while (template[Math.floor(rng * length)] !== '') {\r\n      rng = rand.random();\r\n    }\r\n\r\n    if (template[Math.floor(rng * length)] === '') {\r\n      template[Math.floor(rng * length)] = 'lc';\r\n    }\r\n  }\r\n\r\n  if (uppercase) {\r\n    let rng = rand.random();\r\n    while (template[Math.floor(rng * length)] !== '') {\r\n      rng = rand.random();\r\n    }\r\n\r\n    if (template[Math.floor(rng * length)] === '') {\r\n      template[Math.floor(rng * length)] = 'uc';\r\n    }\r\n  }\r\n\r\n  if (numbers) {\r\n    let rng = rand.random();\r\n    while (template[Math.floor(rng * length)] !== '') {\r\n      rng = rand.random();\r\n    }\r\n\r\n    if (template[Math.floor(rng * length)] === '') {\r\n      template[Math.floor(rng * length)] = 'num';\r\n    }\r\n  }\r\n\r\n  if (specialChars) {\r\n    let rng = rand.random();\r\n    while (template[Math.floor(rng * length)] !== '') {\r\n      rng = rand.random();\r\n    }\r\n\r\n    if (template[Math.floor(rng * length)] === '') {\r\n      template[Math.floor(rng * length)] = 'sc';\r\n    }\r\n  }\r\n\r\n  return template;\r\n}\r\n\r\nfunction createCharSet(lowercase, uppercase, numbers, specialChars) {\r\n  let charSet = [];\r\n\r\n  if (lowercase) {\r\n    charSet = charSet.concat(CHAR_SET_LETTERS);\r\n  }\r\n\r\n  if (uppercase) {\r\n    charSet = charSet.concat(CHAR_SET_CAP_LETTERS);\r\n  }\r\n\r\n  if (numbers) {\r\n    charSet = charSet.concat(CHAR_SET_NUMBERS);\r\n  }\r\n\r\n  if (specialChars) {\r\n    charSet = charSet.concat(CHAR_SET_SPEC_CHARS);\r\n  }\r\n\r\n  if (!lowercase && !uppercase && !numbers && !specialChars) {\r\n    charSet = charSet.concat(CHAR_SET_LETTERS);\r\n  }\r\n\r\n  return charSet;\r\n}","export const whitelist = ['!', '\"', '#', '$', '%', '&', '`', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '{', '|', '}', `~`];","var database;\r\n\r\nexport function openDatabase() {\r\n  return new Promise((resolve, reject) => {\r\n    // IndexedDB setup / store data\r\n    if (!window.indexedDB) {\r\n      reject();\r\n    }\r\n\r\n    let db;\r\n    let request = window.indexedDB.open('services', 1);\r\n\r\n    request.onerror = function (event) {\r\n      console.log(\"error: \");\r\n      reject();\r\n    };\r\n\r\n    request.onsuccess = function (event) {\r\n      db = request.result;\r\n      resolve(db);\r\n    };\r\n\r\n    request.onupgradeneeded = function (event) {\r\n      db = event.target['result'];\r\n\r\n      db.createObjectStore('service', { keyPath: \"id\", autoIncrement: true });\r\n    }\r\n\r\n  });\r\n}\r\n\r\nexport function storeService(service) {\r\n  return new Promise((resolve, reject) => {\r\n    let storeRequest = database.transaction(['service'], \"readwrite\")\r\n      .objectStore('service')\r\n      .put(service);\r\n\r\n    storeRequest.onsuccess = function (event) {\r\n      resolve(event.target.result);\r\n    };\r\n\r\n    storeRequest.onerror = function (event) {\r\n      console.error('error.');\r\n      reject();\r\n    }\r\n  });\r\n}\r\n\r\nexport function readServices() {\r\n  return new Promise((resolve, reject) => {\r\n    let objectStore = database.transaction('service').objectStore('service');\r\n    let services = [];\r\n\r\n    objectStore.openCursor().onsuccess = function (event) {\r\n      let cursor = event.target.result;\r\n\r\n      if (cursor) {\r\n        let service = {\r\n          id: cursor.key,\r\n          name: cursor.value.name,\r\n          url: cursor.value.url,\r\n          account: cursor.value.account,\r\n          version: cursor.value.version,\r\n          length: cursor.value.length,\r\n          rndBytes: cursor.value.rndBytes,\r\n          lowercase: cursor.value.lowercase,\r\n          uppercase: cursor.value.uppercase,\r\n          numbers: cursor.value.numbers,\r\n          specialChars: cursor.value.specialChars,\r\n          whitelist: cursor.value.whitelist,\r\n          blacklist: cursor.value.blacklist\r\n        };\r\n\r\n        services.push(service);\r\n        cursor.continue();\r\n      } else {\r\n        resolve(services);\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nexport function deleteService(key) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = database.transaction(['service'], \"readwrite\")\r\n      .objectStore('service')\r\n      .delete(key);\r\n\r\n    request.onsuccess = function (event) {\r\n      resolve(true);\r\n    };\r\n\r\n    request.onerror = function (event) {\r\n      reject();\r\n    };\r\n  });\r\n}\r\n\r\nexport function getDatabase() {\r\n  return database;\r\n}\r\n\r\nexport function setDatabase(db) {\r\n  database = db;\r\n}\r\n","export const defaultTooltipOptions = {\r\n  position: 'bottom',\r\n  event: 'hover', //'focus'\r\n  showDelay: 1000,\r\n  hideDelay: 0\r\n}","import React from 'react';\r\nimport './passwordDemo.component.sass';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { calculatePassword } from '../../../utilities/calculatePassword.service';\r\nimport { whitelist } from '../../../utilities/constants';\r\nimport { defaultTooltipOptions } from '../../../utilities/defaultTooltipOptions.service'\r\n\r\nclass PasswordDemo extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      calculated: false,\r\n      name: '',\r\n      length: 20,\r\n      password: '',\r\n      servicePassword: ''\r\n    }\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    if (target.name === 'version') {\r\n      this.setState({ [target.name]: parseInt(target.value) });\r\n    } else {\r\n      this.setState({ [target.name]: target.value });\r\n    }\r\n  };\r\n\r\n  onChangeSlider = (e) => {\r\n    let newValue;\r\n    if (e.target && e.target.nodeName === \"INPUT\") {\r\n      newValue = parseInt(e.target.value);\r\n    }\r\n    else {\r\n      newValue = e.value;\r\n    }\r\n\r\n    this.setState({ length: newValue });\r\n  }\r\n\r\n  handleGeneratePassword = async () => {\r\n\r\n    if (this.state.name === '') {\r\n      return;\r\n    }\r\n\r\n    if (this.state.password === '') {\r\n      return;\r\n    }\r\n\r\n    let servicePassword = await calculatePassword(this.state.password, {\r\n      name: this.state.name,\r\n      account: '',\r\n      version: 1,\r\n      length: 20,\r\n      lowercase: true,\r\n      uppercase: true,\r\n      numbers: true,\r\n      specialChars: true,\r\n      whitelist: whitelist,\r\n      blacklist: [],\r\n    });\r\n\r\n    if (servicePassword) {\r\n      this.setState({ calculated: true, servicePassword: servicePassword });\r\n    } else {\r\n      console.error('error');\r\n    }\r\n  }\r\n\r\n  handleCopyToClipboard = () => {\r\n    const el = document.createElement('textarea');\r\n    el.value = this.state.servicePassword;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n  }\r\n\r\n  handleClearPassword = () => {\r\n    this.setState({ calculated: false, name: '', password: '', servicePassword: '' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"passwordDemo\">\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\"><i className=\"pi pi-globe\"></i></span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.name} name=\"name\" onChange={this.handleChange} placeholder=\"Website\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\"><i className=\"pi pi-lock\"></i></span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n        </div>\r\n        {this.state.calculated ?\r\n          <div className=\"servicePassword\">\r\n            <div className=\"p-inputgroup mt-3 mb-3\">\r\n              <span className=\"p-inputgroup-addon\"><i className=\"pi pi-lock\"></i></span>\r\n              <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.servicePassword} name=\"servicePassword\" onChange={this.handleChange} \r\n                placeholder=\"Service-Password\" readOnly />\r\n            </div>\r\n            <Button icon=\"pi pi-copy\" onClick={this.handleCopyToClipboard} tooltip={'Copy Password'} tooltipOptions={defaultTooltipOptions} />\r\n            <Button icon=\"pi pi-trash\" onClick={this.handleClearPassword} tooltip={'Clear Password'} tooltipOptions={defaultTooltipOptions} />\r\n          </div> :\r\n          <Button label=\"Calculate Password\" style={{ marginRight: '.25em' }} onClick={this.handleGeneratePassword} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordDemo;","import React from 'react';\r\nimport './home.component.sass';\r\nimport PasswordDemo from './PasswordDemo/passwordDemo.component';\r\n\r\nclass Home extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loginVisible: false, registerVisible: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <PasswordDemo/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import { LOGIN_USER, UPDATE_USER_PROOF, LOGOUT_USER, ADD_SERVICE, CHANGE_SERVICE, DELETE_SERVICE,\r\n    SET_SERVICES, FILTER_SERVICES, SORT_SERVICES, SHOW_MESSAGE } from '../constants/action-types'\r\n\r\nexport function loginUser(payload) {\r\n    return { type: LOGIN_USER, payload }\r\n};\r\n\r\nexport function updateUserProof(payload) {\r\n    return { type: UPDATE_USER_PROOF, payload }\r\n};\r\n\r\nexport function logoutUser(payload) {\r\n    return { type: LOGOUT_USER, payload }\r\n};\r\n\r\nexport function addService(payload) {\r\n    return { type: ADD_SERVICE, payload }\r\n};\r\n\r\nexport function changeService(payload) {\r\n    return { type: CHANGE_SERVICE, payload }\r\n};\r\n\r\nexport function deleteService(payload) {\r\n    return { type: DELETE_SERVICE, payload }\r\n};\r\n\r\nexport function setServices(payload) {\r\n    return { type: SET_SERVICES, payload }\r\n};\r\n\r\nexport function filterServices(payload) {\r\n    return { type: FILTER_SERVICES, payload }\r\n};\r\n\r\nexport function showMessage(payload) {\r\n    return { type: SHOW_MESSAGE, payload }\r\n}\r\n\r\nexport function sortServices(payload) {\r\n    return { type: SORT_SERVICES, payload }\r\n}","export const LOGIN_USER = 'LOGIN_USER';\r\nexport const UPDATE_USER_PROOF = 'UPDATE_CLIENTSESSIONPROOF';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const ADD_SERVICE = 'ADD_SERVICE';\r\nexport const CHANGE_SERVICE = 'CHANGE_SERVICE';\r\nexport const DELETE_SERVICE = 'DELETE_SERVICE';\r\nexport const SET_SERVICES = 'SET_SERVICES';\r\nexport const FILTER_SERVICES = 'FILTER_SERVICES';\r\nexport const SORT_SERVICES = 'SORT_SERVICES';\r\nexport const SHOW_MESSAGE = 'SHOW_MESSAGE';","import React from 'react';\r\nimport './password.component.sass';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from 'primereact/button';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser, setServices, sortServices } from '../../redux/actions/index';\r\nimport { openDatabase, readServices, setDatabase } from '../../utilities/indexeddb.service';\r\n\r\nclass Password extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { password: '' };\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  handleEnter = (event) => {\r\n    // event.which returns the ascii-code of the character that was pressed --> 13 equals enter key\r\n    if (event && event.which && event.which === 13) {\r\n      this.startOffline();\r\n    }\r\n  };\r\n\r\n  startOffline = async () => {\r\n    if (this.state.password !== '') {\r\n      const user = {\r\n        username: 'offline',\r\n        password: this.state.password,\r\n        isAuthenticated: true,\r\n        clientSessionProof: '',\r\n        isOfflineMode: true,\r\n      };\r\n\r\n      try {\r\n        const db = await openDatabase();\r\n\r\n        if (db) {\r\n          setDatabase(db);\r\n          const services = await readServices();\r\n\r\n          this.props.loginUser(user);\r\n          this.props.setServices(services);\r\n\r\n          this.setState({ password: '' });\r\n          this.props.sortServices(1)\r\n          this.props.hideModal('passwordDialogVisible');\r\n          this.props.history.push('/services');\r\n        }\r\n      } catch (error) {\r\n        // TODO: error messsage toast or sth else\r\n        console.error('error', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\" onKeyUp={this.handleEnter}>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n        </div>\r\n        <Button label={this.props.buttonLabel} icon=\"pi pi-unlock\" onClick={this.startOffline} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   // let store = state;\r\n//   // console.log(store)\r\n//   return {\r\n//     state\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginUser: user => dispatch(loginUser(user)),\r\n    setServices: services => dispatch(setServices(services)),\r\n    sortServices: sortDir => dispatch(sortServices(sortDir))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Password));","import React from 'react';\r\nimport './login.component.sass';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from 'primereact/button';\r\nimport * as srp from 'secure-remote-password/client';\r\nimport * as axios from 'axios';\r\nimport * as crypto from 'crypto';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser, addService, showMessage, sortServices } from '../../redux/actions/index';\r\nimport { whitelist } from '../../utilities/constants';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', password: '' };\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  handleEnter = (event) => {\r\n    // event.which returns the ascii-code of the character that was pressed --> 13 equals enter key\r\n    if (event && event.which && event.which === 13) {\r\n      this.login();\r\n    }\r\n  };\r\n\r\n  login = async () => {\r\n\r\n    if (this.state.username !== '' && this.state.password !== '') {\r\n      try {\r\n\r\n        const clientEphemeral = srp.generateEphemeral()\r\n\r\n        const responseStepOne = await axios.post(\r\n          process.env.NODE_ENV === 'production' ? '/login' : 'http://localhost/login',\r\n          {\r\n            step: '1',\r\n            username: this.state.username,\r\n            clientPublicEphemeral: clientEphemeral.public\r\n          },\r\n          { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n\r\n        if (responseStepOne && responseStepOne.data && responseStepOne.data.stepOneComplete) {\r\n\r\n          const key = await this.generatePBKDF2Hash(this.state.password, responseStepOne.data.salt + this.state.username);\r\n          const clientSession = srp.deriveSession(clientEphemeral.secret, responseStepOne.data.serverEphemeral, responseStepOne.data.salt, this.state.username, key.toString('hex'));\r\n\r\n          const responseStepTwo = await axios.post(\r\n            process.env.NODE_ENV === 'production' ? '/login' : 'http://localhost/login',\r\n            {\r\n              step: '2',\r\n              username: this.state.username,\r\n              clientSessionProof: clientSession.proof\r\n            },\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n          )\r\n\r\n          if (responseStepTwo && responseStepTwo.data && responseStepTwo.data.stepTwoComplete) {\r\n\r\n            srp.verifySession(clientEphemeral.public, clientSession, responseStepTwo.data.serverSessionProof);\r\n\r\n            const user = { ...this.state };\r\n            user.mail = responseStepOne.data.mail;\r\n            user.salt = responseStepOne.data.salt;\r\n            user.isAuthenticated = true;\r\n            user.isOfflineMode = false;\r\n            user.clientSessionProof = clientSession.proof;\r\n            this.props.loginUser(user);\r\n\r\n            for (const service of responseStepTwo.data.services) {\r\n              service.lowercase === 1 ? service.lowercase = true : service.lowercase = false;\r\n              service.uppercase === 1 ? service.uppercase = true : service.uppercase = false;\r\n              service.numbers === 1 ? service.numbers = true : service.numbers = false;\r\n              service.specialChars === 1 ? service.specialChars = true : service.specialChars = false;\r\n              service.whitelist = [...whitelist];\r\n              for (const char of service.blacklist) {\r\n                service.whitelist.splice(service.whitelist.indexOf(char), 1);\r\n              }\r\n              this.props.addService(service);\r\n            }\r\n\r\n            this.setState({ username: '', password: '' });\r\n            this.props.hideModal('loginVisible');\r\n            this.props.sortServices(1)\r\n            this.props.history.push('/services');\r\n            this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Login successful!' });\r\n          } else {\r\n            // wrong password\r\n            this.props.showMessage({ severity: 'error', summary: 'Login failed!', detail: 'Wrong Username/Password.' });\r\n          }\r\n        } else {\r\n          // username not known\r\n          this.props.showMessage({ severity: 'error', summary: 'Login failed!', detail: 'Wrong Username/Password.' });\r\n        }\r\n      } catch (e) {\r\n        this.props.showMessage({ severity: 'error', summary: 'Login failed!', detail: 'Internal Server Error.' });\r\n      }\r\n    } else {\r\n      // not all inputs filled\r\n      this.props.showMessage({ severity: 'error', summary: 'Login failed!', detail: 'Username or password is missing.' });\r\n    }\r\n  }\r\n\r\n  generatePBKDF2Hash = (password, salt) => {\r\n    return new Promise((resolve, reject) => {\r\n      crypto.pbkdf2(password, salt, 100000, 32, 'sha256', (err, hash) => {\r\n        if (err) {\r\n          resolve(null);\r\n        }\r\n        resolve(hash);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\" onKeyUp={this.handleEnter}>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-user\"></i>\r\n          </span>\r\n          <InputText type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleChange} placeholder=\"Username\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n        </div>\r\n        <Button label=\"Login\" icon=\"pi pi-unlock\" onClick={this.login} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   // let store = state;\r\n//   // console.log(store)\r\n//   return {\r\n//     state\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginUser: user => dispatch(loginUser(user)),\r\n    addService: service => dispatch(addService(service)),\r\n    sortServices: sortDir => dispatch(sortServices(sortDir)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Login));","import React from 'react';\r\nimport './register.component.sass';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from 'primereact/button';\r\nimport * as srp from 'secure-remote-password/client';\r\nimport * as axios from 'axios';\r\nimport * as crypto from 'crypto';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { showMessage } from '../../redux/actions/index';\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', mail: '', password: '', passwordMatch: '' };\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  register = async () => {\r\n\r\n    if (this.state.username === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in a username.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.username.match(/^[a-zA-Z]{0,20}$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Your username does not meet the requirements.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.mail === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in your mail address.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.mail.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'The format of the mail is not correct.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.password === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in a password.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.passwordMatch === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please confirm your password.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.password.match(/^(?=.*[0-9])(?=.*[!\"#$%&`()*+,-./:;<=>?@[\\\\\\]^{|}~])(?=.*[A-Z])[a-zA-Z0-9!\"#$%&`()*+,-./:;<=>?@[\\\\\\]^{|}~]{8,}$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Password is to weak.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.password !== this.state.passwordMatch) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Passwords do not match.' });\r\n      return;\r\n    }\r\n\r\n    try {\r\n\r\n      const salt = srp.generateSalt();\r\n      const key = await this.generatePBKDF2Hash(this.state.password, salt + this.state.username);\r\n      const verifier = srp.deriveVerifier(key.toString('hex'));\r\n\r\n\r\n      const response = await axios.post(\r\n        process.env.NODE_ENV === 'production' ? '/register' : 'http://localhost:4500/register',\r\n        {\r\n          username: this.state.username,\r\n          email: this.state.mail,\r\n          salt: salt,\r\n          verifier: verifier\r\n        },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n\r\n      if (response && response.data && response.data.registered) {\r\n        this.setState({ username: '', mail: '', password: '', passwordMatch: '' });\r\n        this.props.hideModal('registerVisible');\r\n        this.props.showModal('loginVisible');\r\n        this.props.history.push('/login');\r\n        this.props.showMessage({ severity: 'success', summary: 'Registration succesful', detail: 'Please sign in to your account.' });\r\n      } else {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Registration not succesful.' });\r\n      }\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Internal Server Error.' });\r\n    }\r\n\r\n  }\r\n\r\n  generatePBKDF2Hash = (password, salt) => {\r\n    return new Promise((resolve, reject) => {\r\n      crypto.pbkdf2(password, salt, 100000, 32, 'sha256', (err, hash) => {\r\n        if (err) {\r\n          resolve(null);\r\n        }\r\n        resolve(hash);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-user\"></i>\r\n          </span>\r\n          <InputText type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleChange} placeholder=\"Username\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">@</span>\r\n          <InputText type=\"mail\" value={this.state.mail} name=\"mail\" onChange={this.handleChange} placeholder=\"E-Mail\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.passwordMatch} name=\"passwordMatch\" onChange={this.handleChange} placeholder=\"Comfirm Password\" />\r\n        </div>\r\n        <Button label=\"Register\" icon=\"pi pi-sign-in\" onClick={this.register} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Register));","import React from 'react';\r\nimport './header.component.sass';\r\nimport Password from '../password/password.component';\r\nimport Login from '../login/login.component';\r\nimport Register from '../register/register.component';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../redux/actions/index';\r\n\r\nclass Header extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loginVisible: false, registerVisible: false, passwordDialogVisible: false };\r\n  }\r\n\r\n  showModal = (target) => {\r\n    this.setState({ [target]: true });\r\n  }\r\n\r\n  hideModal = (target) => {\r\n    this.setState({ [target]: false });\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.logoutUser({})\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"container-fluid header\">\r\n        <div className=\"row header-row\">\r\n          {this.props.isAuthenticated ?\r\n            <div className=\"col-7 col-sm-7 col-md-8 col-lg-9 col-xl-10\">\r\n              <Button label=\"Home\" onClick={() => { this.props.history.push('/') }} />\r\n              <Button label=\"Services\" onClick={() => { this.props.history.push('/services') }} />\r\n            </div> :\r\n            <div className=\"col-4 col-sm-5 col-md-7 col-lg-8 col-xl-9\">\r\n              <Button label=\"Home\" onClick={() => { this.props.history.push('/') }} />\r\n            </div>}\r\n          {this.props.isAuthenticated ?\r\n            <div className=\"headerColRight col-5 col-sm-5 col-md-4 col-lg-3 col-xl-2 text-right\">\r\n              {!this.props.isOfflineMode ? <Button label=\"User\" icon=\"pi pi-user\" onClick={() => { this.props.history.push('/user') }} /> : ''}\r\n              <Button label=\"Logout\" icon=\"pi pi-sign-out\" onClick={this.logout} />\r\n            </div> :\r\n            <div className=\"headerColRight col-8 col-sm-7 col-md-5 col-lg-4 col-xl-3 text-right\">\r\n              <Button label=\"Offline\" icon=\"pi pi-sign-in\" onClick={(e) => this.setState({ passwordDialogVisible: true })} />\r\n              <Button label=\"Sign in\" icon=\"pi pi-sign-in\" onClick={(e) => this.setState({ loginVisible: true })} />\r\n              <Button label=\"Register\" onClick={(e) => this.setState({ registerVisible: true })} />\r\n            </div>\r\n          }\r\n          <Dialog header=\"Offline Mode\" visible={this.state.passwordDialogVisible} modal={true} onHide={() => this.setState({ passwordDialogVisible: false })}>\r\n            <Password buttonLabel=\"Offline\" showModal={this.showModal} hideModal={this.hideModal} />\r\n          </Dialog>\r\n          <Dialog header=\"Sign in\" visible={this.state.loginVisible} modal={true} onHide={() => this.setState({ loginVisible: false })}>\r\n            <Login showModal={this.showModal} hideModal={this.hideModal} />\r\n          </Dialog>\r\n          <Dialog header=\"Register\" visible={this.state.registerVisible} modal={true} onHide={() => this.setState({ registerVisible: false })}>\r\n            <Register showModal={this.showModal} hideModal={this.hideModal} />\r\n          </Dialog>\r\n        </div>\r\n      </header >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let isAuthenticated = state.user.isAuthenticated\r\n  let isOfflineMode = state.user.isOfflineMode\r\n  return {\r\n    isAuthenticated,\r\n    isOfflineMode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: user => dispatch(logoutUser(user))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));","import React from 'react';\r\nimport './footer.component.sass';\r\n\r\nclass Footer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <p>footer</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './pickList.component.sass';\r\nimport { Button } from 'primereact/button';\r\n\r\nclass PickList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.newService) {\r\n      this.state = {\r\n        source: [],\r\n        target: [],\r\n        highlight_white: null,\r\n        highlight_black: null\r\n      }\r\n    } else {\r\n      this.state = {\r\n        source: this.props.whitelist,\r\n        target: this.props.blacklist,\r\n        highlight_white: null,\r\n        highlight_black: null\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ source: this.props.whitelist });\r\n  }\r\n\r\n  handleItemHighlightWhite = (e) => {\r\n    // removes the 'pickList-item-highlight' class from the currently highlighted item\r\n    if (this.state.highlight_white) {\r\n      let temp = this.state.highlight_white;\r\n      temp.className = 'picklist-item';\r\n      this.setState({ highlight_white: temp });\r\n    }\r\n\r\n    // adds the 'pickList-item-highlight' class to the new highlighted item\r\n    e.target.className = 'picklist-item pickList-item-highlight';\r\n    this.setState({ highlight_white: e.target });\r\n  }\r\n\r\n  handleItemHighlightBlack = (e) => {\r\n    // removes the 'pickList-item-highlight' class from the currently highlighted item\r\n    if (this.state.highlight_black) {\r\n      let temp = this.state.highlight_black;\r\n      temp.className = 'picklist-item';\r\n      this.setState({ highlight_black: temp });\r\n    }\r\n\r\n    // adds the 'pickList-item-highlight' class to the new highlighted item\r\n    e.target.className = 'picklist-item pickList-item-highlight';\r\n    this.setState({ highlight_black: e.target });\r\n  }\r\n\r\n  handleSingleItemWhiteBlack = () => {\r\n    if (!this.state.highlight_white) {\r\n      return;\r\n    }\r\n\r\n    let tempWhite = this.state.source;\r\n    let tempBlack = this.state.target;\r\n\r\n    switch (this.state.highlight_white.innerHTML) {\r\n      case '&amp;':\r\n        tempWhite.splice(tempWhite.indexOf('&'), 1);\r\n        tempBlack.push('&');\r\n        break;\r\n      case '&lt;':\r\n        tempWhite.splice(tempWhite.indexOf('<'), 1);\r\n        tempBlack.push('<');\r\n        break;\r\n      case '&gt;':\r\n        tempWhite.splice(tempWhite.indexOf('>'), 1);\r\n        tempBlack.push('>');\r\n        break;\r\n      default:\r\n        tempWhite.splice(tempWhite.indexOf(this.state.highlight_white.innerHTML), 1);\r\n        tempBlack.push(this.state.highlight_white.innerHTML);\r\n        break;\r\n    }\r\n    this.setState({ source: tempWhite, target: tempBlack, highlight_white: null }, () => {\r\n      this.handleOnChange();\r\n    });\r\n  }\r\n\r\n  handleSingleItemBlackWhite = () => {\r\n    if (!this.state.highlight_black) {\r\n      return;\r\n    }\r\n\r\n    let tempWhite = this.state.source;\r\n    let tempBlack = this.state.target;\r\n\r\n    switch (this.state.highlight_black.innerHTML) {\r\n      case '&amp;':\r\n        tempBlack.splice(tempBlack.indexOf('&'), 1);\r\n        tempWhite.push('&');\r\n        break;\r\n      case '&lt;':\r\n        tempBlack.splice(tempBlack.indexOf('<'), 1);\r\n        tempWhite.push('<');\r\n        break;\r\n      case '&gt;':\r\n        tempBlack.splice(tempBlack.indexOf('>'), 1);\r\n        tempWhite.push('>');\r\n        break;\r\n      default:\r\n        tempBlack.splice(tempBlack.indexOf(this.state.highlight_black.innerHTML), 1);\r\n        tempWhite.push(this.state.highlight_black.innerHTML);\r\n        break;\r\n    }\r\n    this.setState({ source: tempWhite, target: tempBlack, highlight_black: null }, () => {\r\n      this.handleOnChange();\r\n    });\r\n  }\r\n\r\n  // w2b => white to black\r\n  handleChangeAllItems = (w2b) => {\r\n    if (w2b && this.state.source.length > 0) {\r\n      let temp = this.state.source;\r\n      this.setState({ source: [], target: temp }, () => {\r\n        this.handleOnChange();\r\n      });\r\n    } else if (!w2b && this.state.target.length > 0) {\r\n      this.setState({ source: this.state.target, target: this.state.source }, () => {\r\n        this.handleOnChange();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOnChange = () => {\r\n    this.props.handleCharListChanges(this.state.source, this.state.target);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pickList-container\">\r\n        <div className=\"pickList picklist-whitelist\">\r\n          <div className=\"pickList-header\">WhiteList</div>\r\n          <div className=\"pickList-body\">\r\n            <ul className=\"pickList-list\">\r\n              {this.state.source.map((char) => (\r\n                <li key={char} className=\"picklist-item\" onClick={this.handleItemHighlightWhite}>{char}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"pickList-button-container\">\r\n          <Button className=\"pickList-button\" icon=\"pi pi-angle-right\" onClick={this.handleSingleItemWhiteBlack}></Button>\r\n          <Button className=\"pickList-button\" icon=\"pi pi-angle-double-right\" onClick={() => { this.handleChangeAllItems(true) }}></Button>\r\n          <Button className=\"pickList-button\" icon=\"pi pi-angle-left\" onClick={this.handleSingleItemBlackWhite}></Button>\r\n          <Button className=\"pickList-button\" icon=\"pi pi-angle-double-left\" onClick={() => { this.handleChangeAllItems(false) }}></Button>\r\n        </div>\r\n        <div className=\"pickList picklist-blacklist\">\r\n          <div className=\"pickList-header\">BlackList</div>\r\n          <div className=\"pickList-body\">\r\n            <ul className=\"pickList-list\">\r\n              {this.state.target.map((char) => (\r\n                <li key={char} className=\"picklist-item\" onClick={this.handleItemHighlightBlack}>{char}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PickList;","import React from 'react';\r\nimport './serviceDetails.component.sass';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\nimport { Slider } from 'primereact/slider';\r\nimport { Button } from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { addService, changeService, showMessage } from '../../../redux/actions/index';\r\nimport * as axios from 'axios';\r\nimport * as crypto from 'crypto';\r\nimport { storeService } from '../../../utilities/indexeddb.service';\r\nimport PickList from './pickList/pickList.component';\r\n\r\nclass ServiceDetails extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (this.props.newService) {\r\n      this.state = {\r\n        name: '',\r\n        url: '',\r\n        account: '',\r\n        version: 1,\r\n        length: 8,\r\n        rndBytes: '',\r\n        lowercase: true,\r\n        uppercase: false,\r\n        numbers: false,\r\n        specialChars: false,\r\n        whitelist: ['!', '\"', '#', '$', '%', '&', '`', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '{', '|', '}', `~`],\r\n        blacklist: []\r\n      }\r\n    } else {\r\n      this.state = { ...this.props.service }\r\n      if (this.props.service.blacklist.length > 0) {\r\n        let whitelist = ['!', '\"', '#', '$', '%', '&', '`', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '{', '|', '}', `~`];\r\n        for (const iterator of this.props.service.blacklist) {\r\n          whitelist.splice(whitelist.indexOf(iterator), 1);\r\n        }\r\n        this.state.whitelist = whitelist;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    if (target.name === 'version') {\r\n      this.setState({ [target.name]: parseInt(target.value) });\r\n    } else {\r\n      this.setState({ [target.name]: target.value });\r\n    }\r\n  };\r\n\r\n  onChangeSlider = (e) => {\r\n    let newValue;\r\n    if (e.target && e.target.nodeName === \"INPUT\") {\r\n      newValue = parseInt(e.target.value);\r\n    }\r\n    else {\r\n      newValue = e.value;\r\n    }\r\n\r\n    this.setState({ length: newValue });\r\n  }\r\n\r\n  handleSubmit = async () => {\r\n    if (this.state.name === '' || this.state.name === ' ') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please enter a service name.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.lowercase && !this.state.uppercase && !this.state.numbers && !this.state.specialChars) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please select at least one password component.' });\r\n      return;\r\n    }\r\n\r\n    if (this.props.newService) {\r\n      this.state.rndBytes = crypto.randomBytes(16).toString('hex');\r\n      const response = await this.sendSaveRequest(this.props.newService);\r\n\r\n      if (response && response.id) {\r\n        this.props.addService({ ...this.state, id: response.id });\r\n        this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Service added!' });\r\n      } else {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be added!' });\r\n      }\r\n    } else {\r\n      const response = await this.sendSaveRequest(false);\r\n\r\n      if (response && response.saved) {\r\n        this.props.changeService(this.state);\r\n        this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Service changed!' });\r\n      } else {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be changed!' });\r\n      }\r\n    }\r\n    // hides the dialog by calling the handleDialogHide function inside service or serviceCard component)\r\n    this.props.handleDialogHide();\r\n  }\r\n\r\n  sendSaveRequest = async (newService) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const response = await axios.post(\r\n          process.env.NODE_ENV === 'production' ? '/service/save' : 'http://localhost:4500/service/save',\r\n          {\r\n            username: this.props.username,\r\n            ...this.state,\r\n            newService: newService,\r\n            clientSessionProof: this.props.clientSessionProof\r\n          },\r\n          { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n\r\n        if (response && response.data && response.data.saved) {\r\n          resolve(response.data);\r\n        } else {\r\n          resolve(false);\r\n        }\r\n      } catch (e) {\r\n        resolve(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmitOffline = async () => {\r\n    if (this.state.name === '' || this.state.name === ' ') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please enter a service name.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.lowercase && !this.state.uppercase && !this.state.numbers && !this.state.specialChars) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please select at least one password component.' });\r\n      return;\r\n    } \r\n\r\n    try {\r\n      if (this.props.newService) {\r\n        this.state.rndBytes = crypto.randomBytes(16).toString('hex');\r\n        const id = await storeService(this.state);\r\n        this.props.addService({ ...this.state, id: id });\r\n        this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Service added!' });\r\n      } else {\r\n        await storeService(this.state);\r\n        this.props.changeService(this.state);\r\n        this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Service changed!' });\r\n      }\r\n\r\n      // hides the dialog by calling the handleDialogHide function inside service or serviceCard component)\r\n      this.props.handleDialogHide();\r\n    } catch (error) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be saved!' });\r\n    }\r\n  }\r\n\r\n  handleCharListChanges = (source, target) => {\r\n    this.setState({ whitelist: source });\r\n    this.setState({ blacklist: target });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"serviceDetails\">\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon inputgroup-addon-edit-service\">Name</span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.name} name=\"name\" onChange={this.handleChange} placeholder=\"Name\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon inputgroup-addon-edit-service\">URL</span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.url} name=\"url\" onChange={this.handleChange} placeholder=\"Url\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon inputgroup-addon-edit-service\">Account</span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.account} name=\"account\" onChange={this.handleChange} placeholder=\"Account\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon inputgroup-addon-edit-service\">Version</span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"number\" value={this.state.version} name=\"version\" onChange={this.handleChange} placeholder=\"Version\" min={1} />\r\n        </div>\r\n        <div className=\"inputgroup-slider\">\r\n          <div className=\"p-inputgroup\">\r\n            <span className=\"p-inputgroup-addon inputgroup-addon-edit-service inputgroup-addon-edit-service-length\">Length</span>\r\n            <InputText className=\"inputtext-edit-service inputtext-edit-service-length\" type=\"number\" value={this.state.length} name=\"length\" onChange={this.onChangeSlider} min={8} max={100} />\r\n          </div>\r\n          <Slider value={this.state.length} style={{ width: \"262.5px\" }} onChange={this.onChangeSlider} min={8} max={100} />\r\n        </div>\r\n        <div className=\"inputswitch-group mt-3\">\r\n          <label className=\"switch-name\">Letters</label>\r\n          <InputSwitch onLabel=\"Yes\" offLabel=\"No\" checked={this.state.lowercase} onChange={(e) => this.setState({ lowercase: e.value })} />\r\n        </div>\r\n        <div className=\"inputswitch-group mt-2\">\r\n          <label className=\"switch-name\">Cap. Letters</label>\r\n          <InputSwitch onLabel=\"Yes\" offLabel=\"No\" checked={this.state.uppercase} onChange={(e) => this.setState({ uppercase: e.value })} />\r\n        </div>\r\n        <div className=\"inputswitch-group mt-2\">\r\n          <label className=\"switch-name\">Numbers</label>\r\n          <InputSwitch onLabel=\"Yes\" offLabel=\"No\" checked={this.state.numbers} onChange={(e) => this.setState({ numbers: e.value })} />\r\n        </div>\r\n        <div className=\"inputswitch-group mt-2 mb-2\">\r\n          <label className=\"switch-name\">Spec. Chararacters</label>\r\n          <InputSwitch onLabel=\"Yes\" offLabel=\"No\" checked={this.state.specialChars} onChange={(e) => this.setState({ specialChars: e.value })} />\r\n        </div>\r\n        {this.state.specialChars ?\r\n          <PickList handleCharListChanges={this.handleCharListChanges} whitelist={this.state.whitelist} blacklist={this.state.blacklist}></PickList>\r\n          : ''}\r\n        <div className=\"button-container mt-2\">\r\n          <Button className=\"mt-2\" label=\"Save\" icon=\"pi pi-check\" style={{ marginRight: '.25em' }} onClick={this.props.isOfflineMode ? this.handleSubmitOffline : this.handleSubmit} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const username = state.user.username;\r\n  const clientSessionProof = state.user.clientSessionProof;\r\n  const isOfflineMode = state.user.isOfflineMode;\r\n  return { username, clientSessionProof, isOfflineMode }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addService: service => dispatch(addService(service)),\r\n    changeService: service => dispatch(changeService(service)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceDetails);","import React from 'react';\r\nimport './serviceCard.component.sass';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from 'primereact/card';\r\nimport { Button } from 'primereact/button';\r\nimport { ContextMenu } from 'primereact/contextmenu';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport ServiceDetails from '../serviceDetails/serviceDetails.component';\r\nimport { deleteService, showMessage } from '../../../redux/actions/index';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { calculatePassword } from '../../../utilities/calculatePassword.service';\r\nimport * as axios from 'axios';\r\nimport { deleteService as deleteServiceIndexedDB } from '../../../utilities/indexeddb.service';\r\nimport { defaultTooltipOptions } from '../../../utilities/defaultTooltipOptions.service';\r\n\r\nclass ServiceCard extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (this.props.service.url) {\r\n      this.state = {\r\n        password: '',\r\n        inputType: 'password',\r\n        inputTypeIsPassword: true,\r\n        showButtonIcon: 'pi pi-eye',\r\n        copyButtonIcon: 'pi pi-copy',\r\n        serviceDetailsVisible: false,\r\n        items: [\r\n          {\r\n            label: 'Generate',\r\n            icon: 'pi pi-fw pi-external-link',\r\n            command: this.handleGeneratePassword\r\n          },\r\n          {\r\n            label: 'Show Password',\r\n            icon: 'pi pi-fw pi-eye',\r\n            command: this.handleChangeInputType\r\n          },\r\n          {\r\n            label: 'Copy',\r\n            icon: 'pi pi-fw pi-copy',\r\n            command: this.handleCopyToClipboard\r\n          },\r\n          {\r\n            label: 'Open URL',\r\n            icon: 'pi pi-fw pi-external-link',\r\n            command: this.handleOpenURL\r\n          },\r\n          {\r\n            label: 'Edit',\r\n            icon: 'pi pi-fw pi-cog',\r\n            command: this.handleDialogShow\r\n          },\r\n          {\r\n            separator: true\r\n          },\r\n          {\r\n            label: 'Delete',\r\n            icon: 'pi pi-fw pi-times',\r\n            command: this.props.isOfflineMode ? this.handleDeleteServiceOffline : this.handleDeleteService\r\n          }\r\n        ]\r\n      };\r\n    } else {\r\n      this.state = {\r\n        password: '',\r\n        inputType: 'password',\r\n        inputTypeIsPassword: true,\r\n        showButtonIcon: 'pi pi-eye',\r\n        copyButtonIcon: 'pi pi-copy',\r\n        serviceDetailsVisible: false,\r\n        items: [\r\n          {\r\n            label: 'Generate',\r\n            icon: 'pi pi-fw pi-external-link',\r\n            command: this.handleGeneratePassword\r\n          },\r\n          {\r\n            label: 'Show Password',\r\n            icon: 'pi pi-fw pi-eye',\r\n            command: this.handleChangeInputType\r\n          },\r\n          {\r\n            label: 'Copy',\r\n            icon: 'pi pi-fw pi-copy',\r\n            command: this.handleCopyToClipboard\r\n          },\r\n          {\r\n            label: 'Edit',\r\n            icon: 'pi pi-fw pi-cog',\r\n            command: this.handleDialogShow\r\n          },\r\n          {\r\n            separator: true\r\n          },\r\n          {\r\n            label: 'Delete',\r\n            icon: 'pi pi-fw pi-times',\r\n            command: this.props.isOfflineMode ? this.handleDeleteServiceOffline : this.handleDeleteService\r\n          }\r\n        ]\r\n      };\r\n    }\r\n  }\r\n\r\n  handleDialogShow = () => {\r\n    this.setState({ serviceDetailsVisible: true });\r\n  }\r\n\r\n  handleDialogHide = () => {\r\n    this.setState({ serviceDetailsVisible: false });\r\n  }\r\n\r\n  handleDeleteService = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        process.env.NODE_ENV === 'production' ? '/service/delete' : 'http://localhost:4500/service/delete',\r\n        {\r\n          username: this.props.username,\r\n          ...this.props.service,\r\n          delete: true,\r\n          clientSessionProof: this.props.clientSessionProof\r\n        },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n\r\n      if (response && response.data && response.data.deleted) {\r\n        this.props.deleteService(this.props.service);\r\n        this.props.showMessage({ severity: 'success', summary: 'Sucess', detail: 'Service deleted.' });\r\n      } else {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be deleted.' });\r\n      }\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Internal Server Error.' });\r\n    }\r\n  }\r\n\r\n  handleDeleteServiceOffline = async () => {\r\n    try {\r\n      await deleteServiceIndexedDB(this.props.service.id);\r\n      this.props.deleteService(this.props.service);\r\n      this.props.showMessage({ severity: 'success', summary: 'Sucess', detail: 'Service deleted.' });\r\n    } catch (error) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be deleted.' });\r\n    }\r\n\r\n  }\r\n\r\n  handleGeneratePassword = async () => {\r\n    let password = await calculatePassword(this.props.masterpassword, this.props.service);\r\n\r\n    if (password) {\r\n      this.setState({ password: password });\r\n      this.handleCopyToClipboard()\r\n    } else {\r\n      console.error('error');\r\n    }\r\n  }\r\n\r\n  handleChangeInputType = () => {\r\n    if (this.state.inputTypeIsPassword) {\r\n      this.setState({ inputType: 'text' });\r\n      this.setState({ showButtonIcon: 'pi pi-eye-slash' });\r\n      this.setState({ inputTypeIsPassword: false });\r\n      this.setState(prevState => {\r\n        const newState = { ...prevState };\r\n        newState.items[1].label = 'Hide Password';\r\n        newState.items[1].icon = 'pi pi-eye-slash';\r\n        return newState;\r\n      });\r\n    } else {\r\n      this.setState({ inputType: 'password' });\r\n      this.setState({ showButtonIcon: 'pi pi-eye' });\r\n      this.setState({ inputTypeIsPassword: true });\r\n      this.setState(prevState => {\r\n        const newState = { ...prevState };\r\n        newState.items[1].label = 'Show Password';\r\n        newState.items[1].icon = 'pi pi-eye';\r\n        return newState;\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOpenURL = () => {\r\n    window.open(this.props.service.url, '_blank');\r\n  }\r\n\r\n  handleCopyToClipboard = () => {\r\n      const el = document.createElement('textarea');\r\n      el.value = this.state.password;\r\n      document.body.appendChild(el);\r\n      el.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(el);\r\n  }\r\n\r\n  handleClearPassword = () => {\r\n    this.setState({ password: '' })\r\n  }\r\n\r\n  footer = <span>\r\n    <Button icon=\"pi pi-cog\" style={{ marginRight: '.25em' }} onClick={this.handleDialogShow} tooltip=\"Edit Service\"  tooltipOptions={defaultTooltipOptions} />\r\n    <Button icon=\"pi pi-trash\" className=\"p-button-secondary\" onClick={this.props.isOfflineMode ? this.handleDeleteServiceOffline : this.handleDeleteService} \r\n      tooltip=\"Delete Service\" tooltipOptions={defaultTooltipOptions} />\r\n  </span>;\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"service-card-container\" onContextMenu={(e) => this.cm.show(e)}>\r\n        {/* <div className=\"service-card-container d-inline\"> */}\r\n        <Card title={this.props.service.name} footer={this.footer} className=\"service-card\">\r\n          {this.props.service.account === '' ?\r\n            <p className=\"service-card-account service-card-account-hidden\">placeholder</p>\r\n            : <p className=\"service-card-account\">{this.props.service.account}</p>}\r\n          <InputText readOnly className=\"service-password-input-text\" type={this.state.inputType} value={this.state.password} />\r\n          <div className=\"service-card-button-container\">\r\n            <Button label=\"Generate\" onClick={this.handleGeneratePassword} />\r\n            <Button icon={this.state.showButtonIcon} onClick={this.handleChangeInputType} tooltip={this.state.inputTypeIsPassword ? 'Show Password' : 'Hide Password'} \r\n              tooltipOptions={defaultTooltipOptions} />\r\n            <Button icon={this.state.copyButtonIcon} onClick={this.handleCopyToClipboard} tooltip={'Copy Password'} tooltipOptions={defaultTooltipOptions} />\r\n            <Button icon=\"pi pi-times\" onClick={this.handleClearPassword} tooltip={'Clear Password'} tooltipOptions={defaultTooltipOptions} />\r\n          </div>\r\n        </Card>\r\n        <ContextMenu model={this.state.items} ref={el => this.cm = el}></ContextMenu>\r\n        {(this.state.serviceDetailsVisible) ? /* Conditional rendering of the Dialog */\r\n          <Dialog header=\"Edit Service\" visible={this.state.serviceDetailsVisible} modal={true} onHide={this.handleDialogHide}>\r\n            <ServiceDetails service={this.props.service} handleDialogHide={this.handleDialogHide} />\r\n          </Dialog>\r\n          : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let service = state.services.find(element => {\r\n    return element.id === ownProps.id;\r\n  });\r\n\r\n  let masterpassword = state.user.password;\r\n  let username = state.user.username;\r\n  let clientSessionProof = state.user.clientSessionProof;\r\n  let isOfflineMode = state.user.isOfflineMode;\r\n\r\n  return {\r\n    service,\r\n    masterpassword,\r\n    username,\r\n    clientSessionProof,\r\n    isOfflineMode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteService: service => dispatch(deleteService(service)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceCard);\r\n","export function exportServices(services) {\r\n  const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(services));\r\n  const downloadAnchorNode = document.createElement('a');\r\n  downloadAnchorNode.setAttribute('href', dataStr);\r\n  downloadAnchorNode.setAttribute('download', 'services.json');\r\n  document.body.appendChild(downloadAnchorNode); // required for firefox\r\n  downloadAnchorNode.click();\r\n  downloadAnchorNode.remove();\r\n}\r\n\r\nexport function readFile(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    \r\n    reader.readAsBinaryString(file);\r\n    reader.onload = () => {\r\n      const fileContent = reader.result;\r\n      resolve(JSON.parse(fileContent));\r\n    };\r\n    reader.onerror = () => {\r\n      reject();\r\n    }\r\n  });\r\n}\r\n\r\n","import * as axios from 'axios';\r\n\r\nexport function sendPostRequest(url, body) {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const response = await axios.post(url, body,\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n\r\n      if (response && response.data && response.data.success) {\r\n        resolve(response.data);\r\n      } else {\r\n        reject('response not successful');\r\n      }\r\n    } catch (e) {\r\n      reject('error', e);\r\n    }\r\n  });\r\n}\r\n","import React from 'react';\r\nimport './controlBar.component.sass';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { connect } from 'react-redux';\r\nimport { addService, filterServices, showMessage, sortServices } from '../../../redux/actions';\r\nimport { exportServices, readFile } from '../../../utilities/import-export.service';\r\nimport { defaultTooltipOptions } from '../../../utilities/defaultTooltipOptions.service';\r\nimport { storeService } from '../../../utilities/indexeddb.service';\r\nimport { sendPostRequest } from '../../../utilities/request.service';\r\n\r\n\r\nclass ControlBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.fileUploadInput = React.createRef();\r\n    this.dropdownContent = React.createRef();\r\n\r\n    this.state = {\r\n      keyword: '',\r\n      sortDir: 1\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutsideDropdown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutsideDropdown);\r\n  }\r\n\r\n  handleInputTextChanges = (e) => {\r\n    this.setState({ keyword: e.target.value }, () => {\r\n      let displayedServices = [];\r\n      for (const service of this.props.services) {\r\n        if (service.name.includes(this.state.keyword)) {\r\n          displayedServices.push(service);\r\n        }\r\n      }\r\n      this.props.filterServices(displayedServices);\r\n    });\r\n  }\r\n\r\n  openUploadDialog = () => {\r\n    this.toggleDropdownMenu();\r\n    this.fileUploadInput.current.click();\r\n  }\r\n\r\n  import = async () => {\r\n    if (!this.fileUploadInput.current.files[0] || this.fileUploadInput.current.files[0].type !== 'application/json') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Upload failed!', detail: 'Invalid file type. Please upload a JSON-File.' });\r\n      return;\r\n    }\r\n    try {\r\n      let services = await readFile(this.fileUploadInput.current.files[0]);\r\n      delete services[0].id\r\n      for (const service of services) {\r\n        // send request to server\r\n        const response = await sendPostRequest(process.env.NODE_ENV === 'production' ? '/service/save' : 'http://localhost:4500/service/save', \r\n          {\r\n            username: this.props.username,\r\n            ...service,\r\n            newService: true,\r\n            clientSessionProof: this.props.clientSessionProof\r\n          })\r\n\r\n        if (response && response.id) {\r\n          service.id = response.id;\r\n          this.props.addService(service);\r\n        }\r\n      }\r\n      this.fileUploadInput.current.value = null;\r\n      this.props.showMessage({ severity: 'success', summary: 'Import complete.', detail: 'Services import successful.' });\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Upload failed!', detail: 'File could not be read.' });\r\n    }\r\n  }\r\n\r\n  importOffline = async () => {\r\n    if (!this.fileUploadInput.current.files[0] || this.fileUploadInput.current.files[0].type !== 'application/json') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Upload failed!', detail: 'Invalid file type. Please upload a JSON-File.' });\r\n      return;\r\n    }\r\n    try {\r\n      let services = await readFile(this.fileUploadInput.current.files[0]);\r\n      delete services[0].id\r\n      for (const service of services) {\r\n        delete service.id\r\n        const id = await storeService(service);\r\n        service.id = id;\r\n        this.props.addService(service);\r\n      }\r\n      this.fileUploadInput.current.value = null;\r\n      this.props.showMessage({ severity: 'success', summary: 'Import complete.', detail: 'Services import successful.' });\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Upload failed!', detail: 'File could not be read.' });\r\n    }\r\n  }\r\n\r\n\r\n  export = () => {\r\n    exportServices(this.props.services);\r\n    this.toggleDropdownMenu();\r\n  }\r\n\r\n  sortDisplayedServices = () => {\r\n    if (this.state.sortDir === 0 || this.state.sortDir === -1) {\r\n      this.props.sortServices(1)\r\n      this.state.sortDir = 1\r\n    } else if (this.state.sortDir === 1){\r\n      this.props.sortServices(-1)\r\n      this.state.sortDir = -1\r\n    }\r\n  }\r\n\r\n  handleClickOutsideDropdown = (event) => {\r\n    if (!event.target.parentElement || (!event.target.parentElement.matches('.dropdown-button')\r\n      && !event.target.parentElement.matches('.dropdown-content-item'))) {\r\n      this.dropdownContent.current.classList.remove('show');\r\n    }\r\n  }\r\n\r\n  toggleDropdownMenu = () => {\r\n    if (this.dropdownContent.current.classList.contains('show')) {\r\n      this.dropdownContent.current.classList.remove('show');\r\n    } else {\r\n      this.dropdownContent.current.classList.add('show');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"control-bar\">\r\n        <div className=\"row justify-content-center control-bar-row\">\r\n          <div className=\"col-8 col-sm-8 col-md-8 col-lg-6 col-xl-3 control-bar-content\">\r\n            <Button className=\"p-button-secondary button-add\" icon=\"pi pi-plus\" onClick={this.props.handleDialogShow}\r\n              tooltip=\"Add Service\" tooltipOptions={defaultTooltipOptions} />\r\n            <input ref={this.fileUploadInput} id=\"fileUpload\" type=\"file\" accept=\"application/json\" onChange={this.props.isOfflineMode ? this.importOffline : this.import} hidden />\r\n            <div className=\"p-inputgroup control-bar-search\">\r\n              <span className=\"p-inputgroup-addon\"><i className=\"pi pi-search\"></i></span>\r\n              <InputText type=\"text\" value={this.state.keyword} name=\"keyword\" onChange={this.handleInputTextChanges} placeholder=\"Keyword\" />\r\n            </div>\r\n            <Button icon=\"pi pi-sort-alt\" className=\"p-button-secondary dropdown-button\" onClick={this.sortDisplayedServices} />\r\n            <div className=\"dropdown\">\r\n              <Button icon=\"pi pi-arrow-down\" className=\"p-button-secondary dropdown-button\" onClick={this.toggleDropdownMenu} />\r\n              <div ref={this.dropdownContent} className=\"dropdown-content\">\r\n                <Button label=\"Import\" className=\"p-button-secondary dropdown-content-item\" icon=\"pi pi-upload\" onClick={this.openUploadDialog}\r\n                  tooltip=\"Import Services from JSON-File\" tooltipOptions={defaultTooltipOptions} />\r\n                <Button label=\"Export\" className=\"p-button-secondary dropdown-content-item\" icon=\"pi pi-download\" onClick={this.export}\r\n                  tooltip=\"Exports all Services to a JSON-File\" tooltipOptions={defaultTooltipOptions} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let services = [];\r\n  const username = state.user.username;\r\n  const clientSessionProof = state.user.clientSessionProof;\r\n  const isOfflineMode = state.user.isOfflineMode;\r\n  for (const service of state.services) {\r\n    services.push(service);\r\n  }\r\n  return {\r\n    services,\r\n    username,\r\n    clientSessionProof,\r\n    isOfflineMode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addService: service => dispatch(addService(service)),\r\n    filterServices: services => dispatch(filterServices(services)),\r\n    sortServices: sortDir => dispatch(sortServices(sortDir)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);","import React from 'react';\r\nimport './services.component.sass';\r\nimport ServiceCard from './serviceCard/serviceCard.component';\r\nimport { connect } from 'react-redux';\r\nimport { deleteService } from '../../redux/actions/index';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport ServiceDetails from './serviceDetails/serviceDetails.component';\r\nimport ControlBar from './controlBar/controlBar.component';\r\n\r\nclass Services extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serviceDetailsVisible: false }\r\n  }\r\n\r\n  handleDialogShow = () => {\r\n    this.setState({ serviceDetailsVisible: true });\r\n  }\r\n\r\n  handleDialogHide = () => {\r\n    this.setState({ serviceDetailsVisible: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"services\">\r\n        <ControlBar handleDialogShow={this.handleDialogShow} />\r\n        <div className=\"servicesList\">\r\n          {this.props.services.map((service) => (\r\n            <div className=\"service\" key={service}><ServiceCard id={service} /></div>\r\n          ))}\r\n        </div>\r\n        {(this.state.serviceDetailsVisible) ? /* Conditional rendering of the Dialog */\r\n          <Dialog header=\"Add Service\" blockScroll={false} visible={this.state.serviceDetailsVisible} modal={true} onHide={this.handleDialogHide}>\r\n            <ServiceDetails newService={true} handleDialogHide={this.handleDialogHide} />\r\n          </Dialog>\r\n        : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let services = [];\r\n  for (const service of state.displayedServices) {\r\n    services.push(service.id);\r\n  }\r\n  return {\r\n    services\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    deleteService: service => dispatch(deleteService(service))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Services);","import React from 'react';\r\nimport './imprint.component.sass';\r\n\r\nclass Imprint extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <h1>Imprint works!</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Imprint;","import React from 'react';\r\nimport './timer.component.sass';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../redux/actions/index';\r\nimport IdleTimer from 'react-idle-timer';\r\n\r\nclass Timer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.idleTimer = null;\r\n    this.state = { remainingTime: '' };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.updateRemainingTime();\r\n  // }\r\n\r\n  // could be usefull for later\r\n  onAction = (e) => {\r\n    // console.log('user did something', e);\r\n  }\r\n\r\n  // could be usefull for later\r\n  onActive = (e) => {\r\n  //   console.log('user is active', e);\r\n  //   console.log('time remaining', this.idleTimer.getRemainingTime());\r\n  }\r\n\r\n  onIdle = () => {\r\n    this.props.logoutUser();\r\n  }\r\n\r\n  // updateRemainingTime = () => {\r\n  //   setInterval(() => {\r\n  //     console.log(this.idleTimer.getRemainingTime());\r\n  //     this.setState({ remainingTime: this.idleTimer.getRemainingTime });\r\n  //   }, 1000);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <IdleTimer\r\n        ref={ref => { this.idleTimer = ref }}\r\n        element={document}\r\n        onActive={this.onActive}\r\n        onIdle={this.onIdle}\r\n        onAction={this.onAction}\r\n        debounce={250}\r\n        timeout={1000 * 60 * 10} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let isAuthenticated = state.user.isAuthenticated;\r\n  return {\r\n    isAuthenticated\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: user => dispatch(logoutUser(user))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Timer));","import React from 'react';\r\nimport './user.component.sass';\r\nimport * as srp from 'secure-remote-password/client';\r\nimport * as axios from 'axios';\r\nimport * as crypto from 'crypto';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { updateUserProof, showMessage } from '../../redux/actions/index';\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mail: props.mail,\r\n      currPassword: '',\r\n      password: '',\r\n      passwordMatch: ''\r\n    }\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  }\r\n\r\n  update = async () => {\r\n\r\n    if (this.state.mail === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in your mail address.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.mail.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'The format of the mail is not correct.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.password === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in a password.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.passwordMatch === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please confirm your password.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.password.match(/^(?=.*[0-9])(?=.*[!\"#$%&`()*+,-./:;<=>?@[\\\\\\]^{|}~])(?=.*[A-Z])[a-zA-Z0-9!\"#$%&`()*+,-./:;<=>?@[\\\\\\]^{|}~]{8,}$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Password is to weak.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.password !== this.state.passwordMatch) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Passwords do not match.' });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // generate current verifier from current password\r\n      const currkey = await this.generatePBKDF2Hash(this.state.currPassword, this.props.salt + this.props.username);\r\n      const currVerifier = srp.deriveVerifier(currkey.toString('hex'));\r\n\r\n      // generate new salt and verifier from new password\r\n      const newSalt = srp.generateSalt();\r\n      const newKey = await this.generatePBKDF2Hash(this.state.password, newSalt + this.props.username);\r\n      const newVerifier = srp.deriveVerifier(newKey.toString('hex'));\r\n\r\n      const clientEphemeral = srp.generateEphemeral()\r\n\r\n      const responseStepOne = await axios.post(\r\n        process.env.NODE_ENV === 'production' ? '/user/update' : 'http://localhost:4500/user/update',\r\n        {\r\n          step: '1',\r\n          username: this.props.username,\r\n          mail: this.state.mail,\r\n          newSalt: newSalt,\r\n          currVerifier: currVerifier,\r\n          newVerifier: newVerifier,\r\n          clientPublicEphemeral: clientEphemeral.public\r\n        },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n      console.log('res1:', responseStepOne.data);\r\n\r\n      if (!responseStepOne || !responseStepOne.data || !responseStepOne.data.stepOneComplete) {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'User data could not be updated.' });\r\n        return;\r\n      }\r\n\r\n      const clientSession = srp.deriveSession(clientEphemeral.secret, responseStepOne.data.serverEphemeral, newSalt,\r\n        this.props.username, newKey.toString('hex'));\r\n\r\n\r\n      const responseStepTwo = await axios.post(\r\n        'http://localhost:4500/user/update',\r\n        {\r\n          step: '2',\r\n          username: this.props.username,\r\n          clientSessionProof: clientSession.proof\r\n        },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n      console.log('res2', responseStepTwo.data)\r\n\r\n      if (!responseStepTwo || !responseStepTwo.data || !responseStepTwo.data.stepTwoComplete) {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'res 2 User data could not be updated.' });\r\n        return;\r\n      }\r\n\r\n      srp.verifySession(clientEphemeral.public, clientSession, responseStepTwo.data.serverSessionProof);\r\n\r\n      this.props.updateUserProof(clientSession.proof);\r\n      this.setState({ currPassword: '', password: '', passwordMatch: '' });\r\n      this.props.showMessage({ severity: 'success', summary: 'Updated.', detail: 'User updated.' });\r\n\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Internal Server Error.' });\r\n    }\r\n  }\r\n\r\n  generatePBKDF2Hash = (password, salt) => {\r\n    return new Promise((resolve, reject) => {\r\n      crypto.pbkdf2(password, salt, 100000, 32, 'sha256', (err, hash) => {\r\n        if (err) {\r\n          reject();\r\n        }\r\n        resolve(hash);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user\">\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-user\"></i>\r\n          </span>\r\n          <InputText type=\"text\" value={this.props.username} name=\"username\" disabled />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">@</span>\r\n          <InputText type=\"mail\" value={this.state.mail} name=\"mail\" onChange={this.handleChange} placeholder=\"E-Mail\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.currPassword} name=\"currPassword\" onChange={this.handleChange} placeholder=\"Current Password\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"New Password\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.passwordMatch} name=\"passwordMatch\" onChange={this.handleChange} placeholder=\"Comfirm new Password\" />\r\n        </div>\r\n        <Button label=\"Update\" icon=\"pi pi-user-edit\" onClick={this.update} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log('user_component_state:', state)\r\n  let username = state.user.username;\r\n  let mail = state.user.mail;\r\n  let salt = state.user.salt;\r\n  return {\r\n    username,\r\n    mail,\r\n    salt\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateUserProof: proof => dispatch(updateUserProof(proof)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import React from 'react';\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\nimport './App.sass';\r\nimport Home from './home/home.component';\r\nimport Header from './header/header.component';\r\nimport Footer from './footer/footer.component';\r\nimport Services from './services/services.component';\r\nimport Imprint from './imprint/imprint.component';\r\nimport Timer from '../components/timer/timer.component';\r\nimport User from '../components/user/user.component';\r\nimport { connect } from 'react-redux';\r\nimport { Growl } from 'primereact/growl';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.message) {\r\n      this.growl.show(nextProps.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Timer />\r\n        <Header />\r\n        <Growl ref={(el) => { this.growl = el; }}></Growl>\r\n        <main className=\"content\">\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/imprint\" component={Imprint} />\r\n          {this.props.isAuthenticated ?\r\n            <Route path=\"/services\" component={Services} /> :\r\n            <Redirect to=\"/\" />\r\n          }\r\n          {(this.props.isAuthenticated && !this.props.isOfflineMode) ?\r\n            <Route path=\"/user\" component={User} /> :\r\n            <Redirect to=\"/\" />\r\n          }\r\n        </main>\r\n        {/* <Footer /> */}\r\n        <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossOrigin=\"anonymous\"></script>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\" crossOrigin=\"anonymous\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\" integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\" crossOrigin=\"anonymous\"></script>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let isAuthenticated = state.user.isAuthenticated;\r\n  let isOfflineMode = state.user.isOfflineMode;\r\n  let message = state.message;\r\n\r\n  return {\r\n    isAuthenticated,\r\n    isOfflineMode,\r\n    message\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { LOGIN_USER, UPDATE_USER_PROOF, LOGOUT_USER, CHANGE_SERVICE, ADD_SERVICE, DELETE_SERVICE, SET_SERVICES, SHOW_MESSAGE, FILTER_SERVICES, SORT_SERVICES } from '../constants/action-types'\r\n\r\n\r\nconst initState = {\r\n  user: {\r\n    username: '',\r\n    password: '',\r\n    mail: '',\r\n    salt: '',\r\n    isAuthenticated: false,\r\n    clientSessionProof: '',\r\n    isOfflineMode: false,\r\n  },\r\n  services: [],\r\n  displayedServices: [],\r\n  messages: {}\r\n}\r\n\r\nfunction rootReducer(state = initState, action) {\r\n  let user = {};\r\n  let services = [];\r\n  let displayedServices = [];\r\n  let messages = {};\r\n\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      user = action.payload\r\n      services = [...state.services];\r\n      displayedServices = [...state.services];\r\n      messages = { ...state.messages };\r\n      return {\r\n        user,\r\n        services,\r\n        displayedServices,\r\n        messages\r\n      }\r\n\r\n    case UPDATE_USER_PROOF:\r\n      return Object.assign({}, state, {\r\n        user: {\r\n          ...state.user,\r\n          clientSessionProof: action.payload\r\n        }\r\n      });\r\n\r\n    case LOGOUT_USER:\r\n      return { ...initState }\r\n\r\n    case ADD_SERVICE:\r\n      return Object.assign({}, state, {\r\n        services: state.services.concat(action.payload),\r\n        displayedServices: state.displayedServices.concat(action.payload)\r\n      });\r\n\r\n    case CHANGE_SERVICE:\r\n      user = { ...state.user };\r\n      services = [...state.services];\r\n      displayedServices = [...state.displayedServices];\r\n      messages = { ...state.messages };\r\n      for (let i = 0; i < services.length; i++) {\r\n        if (services[i].id === action.payload.id) {\r\n          services[i] = action.payload;\r\n          displayedServices[i] = action.payload\r\n          return {\r\n            user,\r\n            services,\r\n            displayedServices,\r\n            messages\r\n          }\r\n        }\r\n      }\r\n      break;\r\n\r\n    case DELETE_SERVICE:\r\n      user = { ...state.user };\r\n      displayedServices = [...state.displayedServices];\r\n      messages = { ...state.messages };\r\n      // find index of element that is to be removed\r\n      const index = state.services.findIndex((service) => {\r\n        return service.id === action.payload.id;\r\n      });\r\n\r\n      const indexDS = state.displayedServices.findIndex((service) => {\r\n        return service.id === action.payload.id;\r\n      });\r\n      if (index >= 0) {\r\n        // slice array in 2 parts: left and right of the element that is to be removed\r\n        const leftArray = state.services.slice(0, index);\r\n        const rightArray = state.services.slice(index + 1, state.services.length);\r\n        const leftArrayDS = state.displayedServices.slice(0, indexDS);\r\n        const rightArrayDS = state.displayedServices.slice(indexDS + 1, state.displayedServices.length);\r\n        // concatenate left and right part again\r\n        services = leftArray.concat(rightArray);\r\n        displayedServices = leftArrayDS.concat(rightArrayDS);\r\n        return {\r\n          user,\r\n          services,\r\n          displayedServices,\r\n          messages\r\n        }\r\n      }\r\n      break;\r\n\r\n    case SET_SERVICES:\r\n      user = { ...state.user };\r\n      services = action.payload;\r\n      displayedServices = action.payload;\r\n      messages = { ...state.messages };\r\n\r\n      return {\r\n        user,\r\n        services,\r\n        displayedServices,\r\n        messages\r\n      };\r\n\r\n    case FILTER_SERVICES:\r\n      user = { ...state.user };\r\n      services = [...state.services];\r\n      displayedServices = action.payload;\r\n      messages = { ...state.messages };\r\n\r\n      return {\r\n        user,\r\n        services,\r\n        displayedServices,\r\n        messages\r\n      }\r\n\r\n    case SORT_SERVICES:\r\n      user = { ...state.user };\r\n      services = [...state.services];\r\n      displayedServices = [...state.displayedServices];\r\n      displayedServices.sort((a, b) => {\r\n        if (a.name.toLowerCase() < b.name.toLowerCase())  return 1\r\n        if (a.name.toLowerCase() > b.name.toLowerCase())  return -1\r\n        return 0\r\n      })\r\n\r\n      if (action.payload === 1) {\r\n        displayedServices.reverse()\r\n      }\r\n\r\n      messages = { ...state.messages };\r\n\r\n      return {\r\n        user,\r\n        services,\r\n        displayedServices,\r\n        messages\r\n      }\r\n\r\n    case SHOW_MESSAGE:\r\n      user = { ...state.user };\r\n      services = [...state.services];\r\n      displayedServices = [...state.displayedServices]\r\n      let message = {};\r\n      message = action.payload;\r\n\r\n      return { user, services, displayedServices, message };\r\n    default:\r\n      return state;\r\n  }\r\n  // return initial state\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.sass';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store/store';\r\n\r\n\r\n\r\nimport { addService, changeService, deleteService } from './redux/actions/index';\r\nwindow.store = store;\r\nwindow.changeService = changeService;\r\nwindow.addService = addService;\r\nwindow.deleteService = deleteService;\r\n\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}