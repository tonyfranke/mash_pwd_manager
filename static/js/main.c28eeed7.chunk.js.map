{"version":3,"sources":["utilities/calculatePassword.service.js","utilities/constants.js","utilities/indexeddb.service.js","utilities/defaultTooltipOptions.service.js","components/home/home.component.js","components/home/PasswordDemo/passwordDemo.component.js","redux/actions/index.js","redux/constants/action-types.js","components/password/password.component.js","components/login/login.component.js","components/register/register.component.js","components/header/header.component.js","components/footer/footer.component.js","components/services/serviceDetails/pickList/pickList.component.js","components/services/serviceDetails/serviceDetails.component.js","components/services/serviceCard/serviceCard.component.js","utilities/import-export.service.js","utilities/request.service.js","components/services/controlBar/controlBar.component.js","components/services/services.component.js","components/imprint/imprint.component.js","components/timer/timer.component.js","components/user/user.component.js","components/App.js","serviceWorker.js","redux/reducers/rootReducer.js","redux/store/store.js","index.js"],"names":["CHAR_SET_LETTERS","CHAR_SET_CAP_LETTERS","CHAR_SET_NUMBERS","CHAR_SET_SPEC_CHARS","calculatePassword","masterpassword","service","Promise","resolve","reject","a","generatePBKDF2Hash","name","account","version","length","rndBytes","hash","pwd","generatePassword","lowercase","uppercase","numbers","specialChars","whitelist","blacklist","join","salt","crypto","err","rand","random_seed","template","Array","i","rng","random","Math","floor","createTemplate","charSet","concat","createCharSet","iterator","splice","indexOf","removeBlacklistedChars","database","defaultTooltipOptions","position","event","showDelay","hideDelay","Home","React","Component","props","state","loginVisible","registerVisible","className","loginUser","payload","type","logoutUser","addService","changeService","deleteService","showMessage","storeService","storeRequest","transaction","objectStore","put","onsuccess","target","result","onerror","console","error","key","request","delete","setDatabase","db","Password","handleChange","setState","value","handleEnter","which","startOffline","password","user","username","isAuthenticated","clientSessionProof","isOfflineMode","window","indexedDB","open","log","onupgradeneeded","createObjectStore","keyPath","autoIncrement","services","openCursor","cursor","id","url","push","continue","setServices","hideModal","history","onKeyUp","this","onChange","placeholder","label","buttonLabel","icon","onClick","connect","dispatch","withRouter","Login","login","process","clientEphemeral","srp","axios","step","clientPublicEphemeral","public","headers","responseStepOne","data","stepOneComplete","clientSession","secret","serverEphemeral","toString","proof","responseStepTwo","stepTwoComplete","serverSessionProof","mail","char","severity","summary","detail","content","Register","register","match","passwordMatch","verifier","email","response","registered","showModal","Header","logout","passwordDialogVisible","e","header","visible","modal","onHide","PickList","handleItemHighlightWhite","highlight_white","temp","handleItemHighlightBlack","highlight_black","handleSingleItemWhiteBlack","tempWhite","source","tempBlack","innerHTML","handleOnChange","handleSingleItemBlackWhite","handleChangeAllItems","w2b","handleCharListChanges","newService","map","ServiceDetails","parseInt","onChangeSlider","newValue","nodeName","handleSubmit","sendSaveRequest","saved","handleDialogHide","handleSubmitOffline","min","max","style","width","onLabel","offLabel","checked","marginRight","ownProps","ServiceCard","handleDialogShow","serviceDetailsVisible","handleDeleteService","deleted","handleDeleteServiceOffline","deleteServiceIndexedDB","handleGeneratePassword","handleChangeInputType","inputTypeIsPassword","inputType","showButtonIcon","prevState","newState","items","handleOpenURL","handleCopyToClipboard","el","document","createElement","body","appendChild","select","execCommand","removeChild","handleClearPassword","footer","tooltip","tooltipOptions","copyButtonIcon","command","separator","onContextMenu","cm","show","title","readOnly","model","ref","find","element","readFile","file","reader","FileReader","readAsBinaryString","onload","fileContent","JSON","parse","sendPostRequest","success","ControlBar","handleInputTextChanges","keyword","displayedServices","includes","filterServices","openUploadDialog","toggleDropdownMenu","fileUploadInput","current","click","import","files","importOffline","export","dataStr","encodeURIComponent","stringify","downloadAnchorNode","setAttribute","remove","exportServices","handleClickOutsideDropdown","parentElement","matches","dropdownContent","classList","contains","add","createRef","addEventListener","removeEventListener","accept","hidden","Services","blockScroll","Imprint","Timer","onAction","onActive","onIdle","idleTimer","remainingTime","debounce","timeout","User","update","currPassword","currkey","currVerifier","newSalt","newKey","newVerifier","updateUserProof","disabled","App","nextProps","message","growl","exact","path","component","to","src","integrity","crossOrigin","Boolean","location","hostname","initState","messages","rootReducer","action","Object","assign","index","findIndex","indexDS","leftArray","slice","rightArray","leftArrayDS","rightArrayDS","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c28eeed7.chunk.js","sourcesContent":["import * as crypto from 'crypto';\r\nimport * as random_seed from 'random-seed';\r\n\r\nconst CHAR_SET_LETTERS = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\r\nconst CHAR_SET_CAP_LETTERS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\nconst CHAR_SET_NUMBERS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\nconst CHAR_SET_SPEC_CHARS = ['!', '\"', '#', '$', '%', '&', '`', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '{', '|', '}', `~`];\r\n\r\n\r\n\r\nexport function calculatePassword(masterpassword, service) {\r\n  return new Promise(async (resolve, reject) => {\r\n    let hash = await generatePBKDF2Hash(masterpassword, (service.name + service.account + service.version + service.length + service.rndBytes));\r\n\r\n    if (hash) {\r\n      //seedPRNG(hash);\r\n      let pwd = generatePassword(hash, service.length, service.lowercase, service.uppercase, service.numbers, service.specialChars, service.whitelist, service.blacklist);\r\n      resolve(pwd.join(''));\r\n    }\r\n  });\r\n}\r\n\r\nfunction generatePBKDF2Hash(masterpassword, salt) {\r\n  return new Promise((resolve, reject) => {\r\n    crypto.pbkdf2(masterpassword, salt, 100000, 128, 'sha256', (err, hash) => {\r\n      if (err) {\r\n        resolve(null);\r\n      }\r\n      resolve(hash);\r\n    });\r\n  });\r\n}\r\n\r\nfunction removeBlacklistedChars(blacklist, charSet) {\r\n  for (const iterator of blacklist) {\r\n    charSet.splice(charSet.indexOf(iterator), 1)\r\n  }\r\n}\r\n\r\nfunction generatePassword(hash, length, lowercase, uppercase, numbers, specialChars, whitelist, blacklist) {\r\n  let rand = random_seed(hash);\r\n  let template = createTemplate(length, lowercase, uppercase, numbers, specialChars, rand);\r\n  let charSet = createCharSet(lowercase, uppercase, numbers, specialChars);\r\n\r\n  removeBlacklistedChars(blacklist, charSet);\r\n\r\n  for (let i = 0; i < template.length; i++) {\r\n    let rng = rand.random();\r\n    switch (template[i]) {\r\n      case '':\r\n        template[i] = charSet[Math.floor(rng * charSet.length)];\r\n        break;\r\n      case 'lc':\r\n        template[i] = CHAR_SET_LETTERS[Math.floor(rng * CHAR_SET_LETTERS.length)];\r\n        break;\r\n      case 'uc':\r\n        template[i] = CHAR_SET_CAP_LETTERS[Math.floor(rng * CHAR_SET_CAP_LETTERS.length)];\r\n        break;\r\n      case 'num':\r\n        template[i] = CHAR_SET_NUMBERS[Math.floor(rng * CHAR_SET_NUMBERS.length)];\r\n        break;\r\n      case 'sc':\r\n        template[i] = whitelist[Math.floor(rng * whitelist.length)];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return template\r\n}\r\n\r\nfunction createTemplate(length, lowercase, uppercase, numbers, specialChars, rand) {\r\n  const template = new Array(length);\r\n\r\n  for (let i = 0; i < template.length; i++) {\r\n    template[i] = '';\r\n  }\r\n\r\n  if (lowercase) {\r\n    let rng = rand.random();\r\n    while (template[Math.floor(rng * length)] !== '') {\r\n      rng = rand.random();\r\n    }\r\n\r\n    if (template[Math.floor(rng * length)] === '') {\r\n      template[Math.floor(rng * length)] = 'lc';\r\n    }\r\n  }\r\n\r\n  if (uppercase) {\r\n    let rng = rand.random();\r\n    while (template[Math.floor(rng * length)] !== '') {\r\n      rng = rand.random();\r\n    }\r\n\r\n    if (template[Math.floor(rng * length)] === '') {\r\n      template[Math.floor(rng * length)] = 'uc';\r\n    }\r\n  }\r\n\r\n  if (numbers) {\r\n    let rng = rand.random();\r\n    while (template[Math.floor(rng * length)] !== '') {\r\n      rng = rand.random();\r\n    }\r\n\r\n    if (template[Math.floor(rng * length)] === '') {\r\n      template[Math.floor(rng * length)] = 'num';\r\n    }\r\n  }\r\n\r\n  if (specialChars) {\r\n    let rng = rand.random();\r\n    while (template[Math.floor(rng * length)] !== '') {\r\n      rng = rand.random();\r\n    }\r\n\r\n    if (template[Math.floor(rng * length)] === '') {\r\n      template[Math.floor(rng * length)] = 'sc';\r\n    }\r\n  }\r\n\r\n  return template;\r\n}\r\n\r\nfunction createCharSet(lowercase, uppercase, numbers, specialChars) {\r\n  let charSet = [];\r\n\r\n  if (lowercase) {\r\n    charSet = charSet.concat(CHAR_SET_LETTERS);\r\n  }\r\n\r\n  if (uppercase) {\r\n    charSet = charSet.concat(CHAR_SET_CAP_LETTERS);\r\n  }\r\n\r\n  if (numbers) {\r\n    charSet = charSet.concat(CHAR_SET_NUMBERS);\r\n  }\r\n\r\n  if (specialChars) {\r\n    charSet = charSet.concat(CHAR_SET_SPEC_CHARS);\r\n  }\r\n\r\n  if (!lowercase && !uppercase && !numbers && !specialChars) {\r\n    charSet = charSet.concat(CHAR_SET_LETTERS);\r\n  }\r\n\r\n  return charSet;\r\n}","export const whitelist = ['!', '\"', '#', '$', '%', '&', '`', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '{', '|', '}', `~`];","var database;\r\n\r\nexport function openDatabase() {\r\n  return new Promise((resolve, reject) => {\r\n    // IndexedDB setup / store data\r\n    if (!window.indexedDB) {\r\n      reject();\r\n    }\r\n\r\n    let db;\r\n    let request = window.indexedDB.open('services', 1);\r\n\r\n    request.onerror = function (event) {\r\n      console.log(\"error: \");\r\n      reject();\r\n    };\r\n\r\n    request.onsuccess = function (event) {\r\n      db = request.result;\r\n      resolve(db);\r\n    };\r\n\r\n    request.onupgradeneeded = function (event) {\r\n      db = event.target['result'];\r\n\r\n      db.createObjectStore('service', { keyPath: \"id\", autoIncrement: true });\r\n    }\r\n\r\n  });\r\n}\r\n\r\nexport function storeService(service) {\r\n  return new Promise((resolve, reject) => {\r\n    let storeRequest = database.transaction(['service'], \"readwrite\")\r\n      .objectStore('service')\r\n      .put(service);\r\n\r\n    storeRequest.onsuccess = function (event) {\r\n      resolve(event.target.result);\r\n    };\r\n\r\n    storeRequest.onerror = function (event) {\r\n      console.error('error.');\r\n      reject();\r\n    }\r\n  });\r\n}\r\n\r\nexport function readServices() {\r\n  return new Promise((resolve, reject) => {\r\n    let objectStore = database.transaction('service').objectStore('service');\r\n    let services = [];\r\n\r\n    objectStore.openCursor().onsuccess = function (event) {\r\n      let cursor = event.target.result;\r\n\r\n      if (cursor) {\r\n        let service = {\r\n          id: cursor.key,\r\n          name: cursor.value.name,\r\n          url: cursor.value.url,\r\n          account: cursor.value.account,\r\n          version: cursor.value.version,\r\n          length: cursor.value.length,\r\n          rndBytes: cursor.value.rndBytes,\r\n          lowercase: cursor.value.lowercase,\r\n          uppercase: cursor.value.uppercase,\r\n          numbers: cursor.value.numbers,\r\n          specialChars: cursor.value.specialChars,\r\n          whitelist: cursor.value.whitelist,\r\n          blacklist: cursor.value.blacklist\r\n        };\r\n\r\n        services.push(service);\r\n        cursor.continue();\r\n      } else {\r\n        resolve(services);\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nexport function deleteService(key) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = database.transaction(['service'], \"readwrite\")\r\n      .objectStore('service')\r\n      .delete(key);\r\n\r\n    request.onsuccess = function (event) {\r\n      resolve(true);\r\n    };\r\n\r\n    request.onerror = function (event) {\r\n      reject();\r\n    };\r\n  });\r\n}\r\n\r\nexport function getDatabase() {\r\n  return database;\r\n}\r\n\r\nexport function setDatabase(db) {\r\n  database = db;\r\n}\r\n","export const defaultTooltipOptions = {\r\n  position: 'bottom',\r\n  event: 'hover', //'focus'\r\n  showDelay: 1000,\r\n  hideDelay: 0\r\n}","import React from 'react';\r\nimport './home.component.sass';\r\nimport PasswordDemo from './PasswordDemo/passwordDemo.component';\r\n\r\nclass Home extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loginVisible: false, registerVisible: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        {/* <PasswordDemo/> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './passwordDemo.component.sass';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { calculatePassword } from '../../../utilities/calculatePassword.service';\r\nimport { whitelist } from '../../../utilities/constants';\r\nimport { defaultTooltipOptions } from '../../../utilities/defaultTooltipOptions.service'\r\n\r\nclass PasswordDemo extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      calculated: false,\r\n      name: '',\r\n      length: 20,\r\n      password: '',\r\n      servicePassword: ''\r\n    }\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    if (target.name === 'version') {\r\n      this.setState({ [target.name]: parseInt(target.value) });\r\n    } else {\r\n      this.setState({ [target.name]: target.value });\r\n    }\r\n  };\r\n\r\n  onChangeSlider = (e) => {\r\n    let newValue;\r\n    if (e.target && e.target.nodeName === \"INPUT\") {\r\n      newValue = parseInt(e.target.value);\r\n    }\r\n    else {\r\n      newValue = e.value;\r\n    }\r\n\r\n    this.setState({ length: newValue });\r\n  }\r\n\r\n  handleGeneratePassword = async () => {\r\n\r\n    if (this.state.name === '') {\r\n      return;\r\n    }\r\n\r\n    if (this.state.password === '') {\r\n      return;\r\n    }\r\n\r\n    let servicePassword = await calculatePassword(this.state.password, {\r\n      name: this.state.name,\r\n      account: '',\r\n      version: 1,\r\n      length: 20,\r\n      lowercase: true,\r\n      uppercase: true,\r\n      numbers: true,\r\n      specialChars: true,\r\n      whitelist: whitelist,\r\n      blacklist: [],\r\n    });\r\n\r\n    if (servicePassword) {\r\n      this.setState({ calculated: true, servicePassword: servicePassword });\r\n    } else {\r\n      console.error('error');\r\n    }\r\n  }\r\n\r\n  handleCopyToClipboard = () => {\r\n    const el = document.createElement('textarea');\r\n    el.value = this.state.servicePassword;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n  }\r\n\r\n  handleClearPassword = () => {\r\n    this.setState({ calculated: false, name: '', password: '', servicePassword: '' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"passwordDemo\">\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\"><i className=\"pi pi-globe\"></i></span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.name} name=\"name\" onChange={this.handleChange} placeholder=\"Website\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\"><i className=\"pi pi-lock\"></i></span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n        </div>\r\n        {this.state.calculated ?\r\n          <div className=\"servicePassword\">\r\n            <div className=\"p-inputgroup mt-3 mb-3\">\r\n              <span className=\"p-inputgroup-addon\"><i className=\"pi pi-lock\"></i></span>\r\n              <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.servicePassword} name=\"servicePassword\" onChange={this.handleChange} \r\n                placeholder=\"Service-Password\" readOnly />\r\n            </div>\r\n            <Button icon=\"pi pi-copy\" onClick={this.handleCopyToClipboard} tooltip={'Copy Password'} tooltipOptions={defaultTooltipOptions} />\r\n            <Button icon=\"pi pi-trash\" onClick={this.handleClearPassword} tooltip={'Clear Password'} tooltipOptions={defaultTooltipOptions} />\r\n          </div> :\r\n          <Button label=\"Calculate Password\" style={{ marginRight: '.25em' }} onClick={this.handleGeneratePassword} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordDemo;","import { LOGIN_USER, UPDATE_USER_PROOF, LOGOUT_USER, ADD_SERVICE, CHANGE_SERVICE, DELETE_SERVICE,\r\n    SET_SERVICES, FILTER_SERVICES, SHOW_MESSAGE } from '../constants/action-types'\r\n\r\nexport function loginUser(payload) {\r\n    return { type: LOGIN_USER, payload }\r\n};\r\n\r\nexport function updateUserProof(payload) {\r\n    return { type: UPDATE_USER_PROOF, payload }\r\n};\r\n\r\nexport function logoutUser(payload) {\r\n    return { type: LOGOUT_USER, payload }\r\n};\r\n\r\nexport function addService(payload) {\r\n    return { type: ADD_SERVICE, payload }\r\n};\r\n\r\nexport function changeService(payload) {\r\n    return { type: CHANGE_SERVICE, payload }\r\n};\r\n\r\nexport function deleteService(payload) {\r\n    return { type: DELETE_SERVICE, payload }\r\n};\r\n\r\nexport function setServices(payload) {\r\n    return { type: SET_SERVICES, payload }\r\n};\r\n\r\nexport function filterServices(payload) {\r\n    return { type: FILTER_SERVICES, payload }\r\n};\r\n\r\nexport function showMessage(payload) {\r\n    return { type: SHOW_MESSAGE, payload }\r\n}","export const LOGIN_USER = 'LOGIN_USER';\r\nexport const UPDATE_USER_PROOF = 'UPDATE_CLIENTSESSIONPROOF';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const ADD_SERVICE = 'ADD_SERVICE';\r\nexport const CHANGE_SERVICE = 'CHANGE_SERVICE';\r\nexport const DELETE_SERVICE = 'DELETE_SERVICE';\r\nexport const SET_SERVICES = 'SET_SERVICES';\r\nexport const FILTER_SERVICES = 'FILTER_SERVICES';\r\nexport const SHOW_MESSAGE = 'SHOW_MESSAGE';","import React from 'react';\r\nimport './password.component.sass';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from 'primereact/button';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser, setServices } from '../../redux/actions/index';\r\nimport { openDatabase, readServices, setDatabase } from '../../utilities/indexeddb.service';\r\n\r\nclass Password extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { password: '' };\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  handleEnter = (event) => {\r\n    // event.which returns the ascii-code of the character that was pressed --> 13 equals enter key\r\n    if (event && event.which && event.which === 13) {\r\n      this.startOffline();\r\n    }\r\n  };\r\n\r\n  startOffline = async () => {\r\n    if (this.state.password !== '') {\r\n      const user = {\r\n        username: 'offline',\r\n        password: this.state.password,\r\n        isAuthenticated: true,\r\n        clientSessionProof: '',\r\n        isOfflineMode: true,\r\n      };\r\n\r\n      try {\r\n        const db = await openDatabase();\r\n\r\n        if (db) {\r\n          setDatabase(db);\r\n          const services = await readServices();\r\n\r\n          this.props.loginUser(user);\r\n          this.props.setServices(services);\r\n\r\n          this.setState({ password: '' });\r\n          this.props.hideModal('passwordDialogVisible');\r\n          this.props.history.push('/services');\r\n        }\r\n      } catch (error) {\r\n        // TODO: error messsage toast or sth else\r\n        console.error('error', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\" onKeyUp={this.handleEnter}>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n        </div>\r\n        <Button label={this.props.buttonLabel} icon=\"pi pi-unlock\" onClick={this.startOffline} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   // let store = state;\r\n//   // console.log(store)\r\n//   return {\r\n//     state\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginUser: user => dispatch(loginUser(user)),\r\n    setServices: services => dispatch(setServices(services))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Password));","import React from 'react';\r\nimport './login.component.sass';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from 'primereact/button';\r\nimport * as srp from 'secure-remote-password/client';\r\nimport * as axios from 'axios';\r\nimport * as crypto from 'crypto';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser, addService, showMessage } from '../../redux/actions/index';\r\nimport { whitelist } from '../../utilities/constants';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', password: '' };\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  handleEnter = (event) => {\r\n    // event.which returns the ascii-code of the character that was pressed --> 13 equals enter key\r\n    if (event && event.which && event.which === 13) {\r\n      this.login();\r\n    }\r\n  };\r\n\r\n  login = async () => {\r\n\r\n    console.log(process.env.NODE_ENV);\r\n\r\n    console.log(process.env.NODE_ENV === 'development' ? '/login' : 'http://localhost/login');\r\n\r\n    if (this.state.username !== '' && this.state.password !== '') {\r\n      try {\r\n\r\n        const clientEphemeral = srp.generateEphemeral()\r\n\r\n        const responseStepOne = await axios.post(\r\n          process.env.NODE_ENV === 'production' ? '/login' : 'http://localhost/login',\r\n          {\r\n            step: '1',\r\n            username: this.state.username,\r\n            clientPublicEphemeral: clientEphemeral.public\r\n          },\r\n          { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n\r\n        if (responseStepOne && responseStepOne.data && responseStepOne.data.stepOneComplete) {\r\n\r\n          const key = await this.generatePBKDF2Hash(this.state.password, responseStepOne.data.salt + this.state.username);\r\n          const clientSession = srp.deriveSession(clientEphemeral.secret, responseStepOne.data.serverEphemeral, responseStepOne.data.salt, this.state.username, key.toString('hex'));\r\n\r\n          const responseStepTwo = await axios.post(\r\n            process.env.NODE_ENV === 'production' ? '/login' : 'http://localhost/login',\r\n            {\r\n              step: '2',\r\n              username: this.state.username,\r\n              clientSessionProof: clientSession.proof\r\n            },\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n          )\r\n\r\n          console.log(responseStepTwo.data)\r\n\r\n          if (responseStepTwo && responseStepTwo.data && responseStepTwo.data.stepTwoComplete) {\r\n\r\n            srp.verifySession(clientEphemeral.public, clientSession, responseStepTwo.data.serverSessionProof);\r\n\r\n            const user = { ...this.state };\r\n            user.mail = responseStepOne.data.mail;\r\n            user.salt = responseStepOne.data.salt;\r\n            user.isAuthenticated = true;\r\n            user.isOfflineMode = false;\r\n            user.clientSessionProof = clientSession.proof;\r\n            this.props.loginUser(user);\r\n\r\n            for (const service of responseStepTwo.data.services) {\r\n              service.lowercase === 1 ? service.lowercase = true : service.lowercase = false;\r\n              service.uppercase === 1 ? service.uppercase = true : service.uppercase = false;\r\n              service.numbers === 1 ? service.numbers = true : service.numbers = false;\r\n              service.specialChars === 1 ? service.specialChars = true : service.specialChars = false;\r\n              service.whitelist = [...whitelist];\r\n              for (const char of service.blacklist) {\r\n                service.whitelist.splice(service.whitelist.indexOf(char), 1);\r\n              }\r\n              this.props.addService(service);\r\n            }\r\n\r\n            this.setState({ username: '', password: '' });\r\n            this.props.hideModal('loginVisible');\r\n            this.props.history.push('/services');\r\n            this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Login successful!' });\r\n          } else {\r\n            // wrong password\r\n            this.props.showMessage({ severity: 'error', summary: 'Login failed!', detail: 'Wrong Username/Password.' });\r\n          }\r\n        } else {\r\n          // username not known\r\n          this.props.showMessage({ severity: 'error', summary: 'Login failed!', detail: 'Wrong Username/Password.' });\r\n        }\r\n      } catch (e) {\r\n        this.props.showMessage({ severity: 'error', summary: 'Login failed!', detail: 'Internal Server Error.' });\r\n      }\r\n    } else {\r\n      // not all inputs filled\r\n      this.props.showMessage({ severity: 'error', summary: 'Login failed!', detail: 'Username or password is missing.' });\r\n    }\r\n  }\r\n\r\n  generatePBKDF2Hash = (password, salt) => {\r\n    return new Promise((resolve, reject) => {\r\n      crypto.pbkdf2(password, salt, 100000, 32, 'sha256', (err, hash) => {\r\n        if (err) {\r\n          resolve(null);\r\n        }\r\n        resolve(hash);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\" onKeyUp={this.handleEnter}>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-user\"></i>\r\n          </span>\r\n          <InputText type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleChange} placeholder=\"Username\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n        </div>\r\n        <Button label=\"Login\" icon=\"pi pi-unlock\" onClick={this.login} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   // let store = state;\r\n//   // console.log(store)\r\n//   return {\r\n//     state\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginUser: user => dispatch(loginUser(user)),\r\n    addService: service => dispatch(addService(service)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Login));","import React from 'react';\r\nimport './register.component.sass';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from 'primereact/button';\r\nimport * as srp from 'secure-remote-password/client';\r\nimport * as axios from 'axios';\r\nimport * as crypto from 'crypto';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { showMessage } from '../../redux/actions/index';\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', mail: '', password: '', passwordMatch: '' };\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  register = async () => {\r\n\r\n    if (this.state.username === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in a username.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.username.match(/^[a-zA-Z]{0,20}$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Your username does not meet the requirements.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.mail === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in your mail address.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.mail.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'The format of the mail is not correct.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.password === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in a password.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.passwordMatch === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please confirm your password.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.password.match(/^(?=.*[0-9])(?=.*[!\"#$%&`()*+,-./:;<=>?@[\\\\\\]^{|}~])(?=.*[A-Z])[a-zA-Z0-9!\"#$%&`()*+,-./:;<=>?@[\\\\\\]^{|}~]{8,}$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Password is to weak.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.password !== this.state.passwordMatch) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Passwords do not match.' });\r\n      return;\r\n    }\r\n\r\n    try {\r\n\r\n      const salt = srp.generateSalt();\r\n      const key = await this.generatePBKDF2Hash(this.state.password, salt + this.state.username);\r\n      const verifier = srp.deriveVerifier(key.toString('hex'));\r\n\r\n\r\n      const response = await axios.post(\r\n        process.env.NODE_ENV === 'production' ? '/register' : 'http://localhost:4500/register',\r\n        {\r\n          username: this.state.username,\r\n          email: this.state.mail,\r\n          salt: salt,\r\n          verifier: verifier\r\n        },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n\r\n      if (response && response.data && response.data.registered) {\r\n        this.setState({ username: '', mail: '', password: '', passwordMatch: '' });\r\n        this.props.hideModal('registerVisible');\r\n        this.props.showModal('loginVisible');\r\n        this.props.history.push('/login');\r\n        this.props.showMessage({ severity: 'success', summary: 'Registration succesful', detail: 'Please sign in to your account.' });\r\n      } else {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Registration not succesful.' });\r\n      }\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Internal Server Error.' });\r\n    }\r\n\r\n  }\r\n\r\n  generatePBKDF2Hash = (password, salt) => {\r\n    return new Promise((resolve, reject) => {\r\n      crypto.pbkdf2(password, salt, 100000, 32, 'sha256', (err, hash) => {\r\n        if (err) {\r\n          resolve(null);\r\n        }\r\n        resolve(hash);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-user\"></i>\r\n          </span>\r\n          <InputText type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleChange} placeholder=\"Username\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">@</span>\r\n          <InputText type=\"mail\" value={this.state.mail} name=\"mail\" onChange={this.handleChange} placeholder=\"E-Mail\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.passwordMatch} name=\"passwordMatch\" onChange={this.handleChange} placeholder=\"Comfirm Password\" />\r\n        </div>\r\n        <Button label=\"Register\" icon=\"pi pi-sign-in\" onClick={this.register} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Register));","import React from 'react';\r\nimport './header.component.sass';\r\nimport Password from '../password/password.component';\r\nimport Login from '../login/login.component';\r\nimport Register from '../register/register.component';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../redux/actions/index';\r\n\r\nclass Header extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loginVisible: false, registerVisible: false, passwordDialogVisible: false };\r\n  }\r\n\r\n  showModal = (target) => {\r\n    this.setState({ [target]: true });\r\n  }\r\n\r\n  hideModal = (target) => {\r\n    this.setState({ [target]: false });\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.logoutUser({})\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"container-fluid header\">\r\n        <div className=\"row header-row\">\r\n          {this.props.isAuthenticated ?\r\n            <div className=\"col-7 col-sm-7 col-md-8 col-lg-9 col-xl-10\">\r\n              <Button label=\"Home\" onClick={() => { this.props.history.push('/') }} />\r\n              <Button label=\"Services\" onClick={() => { this.props.history.push('/services') }} />\r\n            </div> :\r\n            <div className=\"col-4 col-sm-5 col-md-7 col-lg-8 col-xl-9\">\r\n              <Button label=\"Home\" onClick={() => { this.props.history.push('/') }} />\r\n            </div>}\r\n          {this.props.isAuthenticated ?\r\n            <div className=\"headerColRight col-5 col-sm-5 col-md-4 col-lg-3 col-xl-2 text-right\">\r\n              {!this.props.isOfflineMode ? <Button label=\"User\" icon=\"pi pi-user\" onClick={() => { this.props.history.push('/user') }} /> : ''}\r\n              <Button label=\"Logout\" icon=\"pi pi-sign-out\" onClick={this.logout} />\r\n            </div> :\r\n            <div className=\"headerColRight col-8 col-sm-7 col-md-5 col-lg-4 col-xl-3 text-right\">\r\n              <Button label=\"Offline\" icon=\"pi pi-sign-in\" onClick={(e) => this.setState({ passwordDialogVisible: true })} />\r\n              <Button label=\"Sign in\" icon=\"pi pi-sign-in\" onClick={(e) => this.setState({ loginVisible: true })} />\r\n              <Button label=\"Register\" onClick={(e) => this.setState({ registerVisible: true })} />\r\n            </div>\r\n          }\r\n          <Dialog header=\"Offline Mode\" visible={this.state.passwordDialogVisible} modal={true} onHide={() => this.setState({ passwordDialogVisible: false })}>\r\n            <Password buttonLabel=\"Offline\" showModal={this.showModal} hideModal={this.hideModal} />\r\n          </Dialog>\r\n          <Dialog header=\"Sign in\" visible={this.state.loginVisible} modal={true} onHide={() => this.setState({ loginVisible: false })}>\r\n            <Login showModal={this.showModal} hideModal={this.hideModal} />\r\n          </Dialog>\r\n          <Dialog header=\"Register\" visible={this.state.registerVisible} modal={true} onHide={() => this.setState({ registerVisible: false })}>\r\n            <Register showModal={this.showModal} hideModal={this.hideModal} />\r\n          </Dialog>\r\n        </div>\r\n      </header >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let isAuthenticated = state.user.isAuthenticated\r\n  let isOfflineMode = state.user.isOfflineMode\r\n  return {\r\n    isAuthenticated,\r\n    isOfflineMode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: user => dispatch(logoutUser(user))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));","import React from 'react';\r\nimport './footer.component.sass';\r\n\r\nclass Footer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <p>footer</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './pickList.component.sass';\r\nimport { Button } from 'primereact/button';\r\n\r\nclass PickList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.newService) {\r\n      this.state = {\r\n        source: [],\r\n        target: [],\r\n        highlight_white: null,\r\n        highlight_black: null\r\n      }\r\n    } else {\r\n      this.state = {\r\n        source: this.props.whitelist,\r\n        target: this.props.blacklist,\r\n        highlight_white: null,\r\n        highlight_black: null\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ source: this.props.whitelist });\r\n  }\r\n\r\n  handleItemHighlightWhite = (e) => {\r\n    // removes the 'pickList-item-highlight' class from the currently highlighted item\r\n    if (this.state.highlight_white) {\r\n      let temp = this.state.highlight_white;\r\n      temp.className = 'picklist-item';\r\n      this.setState({ highlight_white: temp });\r\n    }\r\n\r\n    // adds the 'pickList-item-highlight' class to the new highlighted item\r\n    e.target.className = 'picklist-item pickList-item-highlight';\r\n    this.setState({ highlight_white: e.target });\r\n  }\r\n\r\n  handleItemHighlightBlack = (e) => {\r\n    // removes the 'pickList-item-highlight' class from the currently highlighted item\r\n    if (this.state.highlight_black) {\r\n      let temp = this.state.highlight_black;\r\n      temp.className = 'picklist-item';\r\n      this.setState({ highlight_black: temp });\r\n    }\r\n\r\n    // adds the 'pickList-item-highlight' class to the new highlighted item\r\n    e.target.className = 'picklist-item pickList-item-highlight';\r\n    this.setState({ highlight_black: e.target });\r\n  }\r\n\r\n  handleSingleItemWhiteBlack = () => {\r\n    if (!this.state.highlight_white) {\r\n      return;\r\n    }\r\n\r\n    let tempWhite = this.state.source;\r\n    let tempBlack = this.state.target;\r\n\r\n    switch (this.state.highlight_white.innerHTML) {\r\n      case '&amp;':\r\n        tempWhite.splice(tempWhite.indexOf('&'), 1);\r\n        tempBlack.push('&');\r\n        break;\r\n      case '&lt;':\r\n        tempWhite.splice(tempWhite.indexOf('<'), 1);\r\n        tempBlack.push('<');\r\n        break;\r\n      case '&gt;':\r\n        tempWhite.splice(tempWhite.indexOf('>'), 1);\r\n        tempBlack.push('>');\r\n        break;\r\n      default:\r\n        tempWhite.splice(tempWhite.indexOf(this.state.highlight_white.innerHTML), 1);\r\n        tempBlack.push(this.state.highlight_white.innerHTML);\r\n        break;\r\n    }\r\n    this.setState({ source: tempWhite, target: tempBlack, highlight_white: null }, () => {\r\n      this.handleOnChange();\r\n    });\r\n  }\r\n\r\n  handleSingleItemBlackWhite = () => {\r\n    if (!this.state.highlight_black) {\r\n      return;\r\n    }\r\n\r\n    let tempWhite = this.state.source;\r\n    let tempBlack = this.state.target;\r\n\r\n    switch (this.state.highlight_black.innerHTML) {\r\n      case '&amp;':\r\n        tempBlack.splice(tempBlack.indexOf('&'), 1);\r\n        tempWhite.push('&');\r\n        break;\r\n      case '&lt;':\r\n        tempBlack.splice(tempBlack.indexOf('<'), 1);\r\n        tempWhite.push('<');\r\n        break;\r\n      case '&gt;':\r\n        tempBlack.splice(tempBlack.indexOf('>'), 1);\r\n        tempWhite.push('>');\r\n        break;\r\n      default:\r\n        tempBlack.splice(tempBlack.indexOf(this.state.highlight_black.innerHTML), 1);\r\n        tempWhite.push(this.state.highlight_black.innerHTML);\r\n        break;\r\n    }\r\n    this.setState({ source: tempWhite, target: tempBlack, highlight_black: null }, () => {\r\n      this.handleOnChange();\r\n    });\r\n  }\r\n\r\n  // w2b => white to black\r\n  handleChangeAllItems = (w2b) => {\r\n    if (w2b && this.state.source.length > 0) {\r\n      let temp = this.state.source;\r\n      this.setState({ source: [], target: temp }, () => {\r\n        this.handleOnChange();\r\n      });\r\n    } else if (!w2b && this.state.target.length > 0) {\r\n      this.setState({ source: this.state.target, target: this.state.source }, () => {\r\n        this.handleOnChange();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOnChange = () => {\r\n    this.props.handleCharListChanges(this.state.source, this.state.target);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pickList-container\">\r\n        <div className=\"pickList picklist-whitelist\">\r\n          <div className=\"pickList-header\">WhiteList</div>\r\n          <div className=\"pickList-body\">\r\n            <ul className=\"pickList-list\">\r\n              {this.state.source.map((char) => (\r\n                <li key={char} className=\"picklist-item\" onClick={this.handleItemHighlightWhite}>{char}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"pickList-button-container\">\r\n          <Button className=\"pickList-button\" icon=\"pi pi-angle-right\" onClick={this.handleSingleItemWhiteBlack}></Button>\r\n          <Button className=\"pickList-button\" icon=\"pi pi-angle-double-right\" onClick={() => { this.handleChangeAllItems(true) }}></Button>\r\n          <Button className=\"pickList-button\" icon=\"pi pi-angle-left\" onClick={this.handleSingleItemBlackWhite}></Button>\r\n          <Button className=\"pickList-button\" icon=\"pi pi-angle-double-left\" onClick={() => { this.handleChangeAllItems(false) }}></Button>\r\n        </div>\r\n        <div className=\"pickList picklist-blacklist\">\r\n          <div className=\"pickList-header\">BlackList</div>\r\n          <div className=\"pickList-body\">\r\n            <ul className=\"pickList-list\">\r\n              {this.state.target.map((char) => (\r\n                <li key={char} className=\"picklist-item\" onClick={this.handleItemHighlightBlack}>{char}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PickList;","import React from 'react';\r\nimport './serviceDetails.component.sass';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\nimport { Slider } from 'primereact/slider';\r\nimport { Button } from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { addService, changeService, showMessage } from '../../../redux/actions/index';\r\nimport * as axios from 'axios';\r\nimport * as crypto from 'crypto';\r\nimport { storeService } from '../../../utilities/indexeddb.service';\r\nimport PickList from './pickList/pickList.component';\r\n\r\nclass ServiceDetails extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (this.props.newService) {\r\n      this.state = {\r\n        name: '',\r\n        url: '',\r\n        account: '',\r\n        version: 1,\r\n        length: 8,\r\n        rndBytes: '',\r\n        lowercase: true,\r\n        uppercase: false,\r\n        numbers: false,\r\n        specialChars: false,\r\n        whitelist: ['!', '\"', '#', '$', '%', '&', '`', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '{', '|', '}', `~`],\r\n        blacklist: []\r\n      }\r\n    } else {\r\n      this.state = { ...this.props.service }\r\n      if (this.props.service.blacklist.length > 0) {\r\n        let whitelist = ['!', '\"', '#', '$', '%', '&', '`', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '{', '|', '}', `~`];\r\n        for (const iterator of this.props.service.blacklist) {\r\n          whitelist.splice(whitelist.indexOf(iterator), 1);\r\n        }\r\n        this.state.whitelist = whitelist;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    if (target.name === 'version') {\r\n      this.setState({ [target.name]: parseInt(target.value) });\r\n    } else {\r\n      this.setState({ [target.name]: target.value });\r\n    }\r\n  };\r\n\r\n  onChangeSlider = (e) => {\r\n    let newValue;\r\n    if (e.target && e.target.nodeName === \"INPUT\") {\r\n      newValue = parseInt(e.target.value);\r\n    }\r\n    else {\r\n      newValue = e.value;\r\n    }\r\n\r\n    this.setState({ length: newValue });\r\n  }\r\n\r\n  handleSubmit = async () => {\r\n    if (this.state.name === '' || this.state.name === ' ') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please enter a service name.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.lowercase && !this.state.uppercase && !this.state.numbers && !this.state.specialChars) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please select at least one password component.' });\r\n      return;\r\n    }\r\n\r\n    if (this.props.newService) {\r\n      this.state.rndBytes = crypto.randomBytes(16).toString('hex');\r\n      const response = await this.sendSaveRequest(this.props.newService);\r\n\r\n      if (response && response.id) {\r\n        this.props.addService({ ...this.state, id: response.id });\r\n        this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Service added!' });\r\n      } else {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be added!' });\r\n      }\r\n    } else {\r\n      const response = await this.sendSaveRequest(false);\r\n\r\n      if (response && response.saved) {\r\n        this.props.changeService(this.state);\r\n        this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Service changed!' });\r\n      } else {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be changed!' });\r\n      }\r\n    }\r\n    // hides the dialog by calling the handleDialogHide function inside service or serviceCard component)\r\n    this.props.handleDialogHide();\r\n  }\r\n\r\n  sendSaveRequest = async (newService) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const response = await axios.post(\r\n          process.env.NODE_ENV === 'production' ? '/service/save' : 'http://localhost:4500/service/save',\r\n          {\r\n            username: this.props.username,\r\n            ...this.state,\r\n            newService: newService,\r\n            clientSessionProof: this.props.clientSessionProof\r\n          },\r\n          { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n\r\n        if (response && response.data && response.data.saved) {\r\n          resolve(response.data);\r\n        } else {\r\n          resolve(false);\r\n        }\r\n      } catch (e) {\r\n        resolve(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmitOffline = async () => {\r\n    if (this.state.name === '' || this.state.name === ' ') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please enter a service name.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.lowercase && !this.state.uppercase && !this.state.numbers && !this.state.specialChars) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please select at least one password component.' });\r\n      return;\r\n    } \r\n\r\n    try {\r\n      if (this.props.newService) {\r\n        this.state.rndBytes = crypto.randomBytes(16).toString('hex');\r\n        const id = await storeService(this.state);\r\n        this.props.addService({ ...this.state, id: id });\r\n        this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Service added!' });\r\n      } else {\r\n        await storeService(this.state);\r\n        this.props.changeService(this.state);\r\n        this.props.showMessage({ severity: 'success', summary: 'Success', detail: 'Service changed!' });\r\n      }\r\n\r\n      // hides the dialog by calling the handleDialogHide function inside service or serviceCard component)\r\n      this.props.handleDialogHide();\r\n    } catch (error) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be saved!' });\r\n    }\r\n  }\r\n\r\n  handleCharListChanges = (source, target) => {\r\n    this.setState({ whitelist: source });\r\n    this.setState({ blacklist: target });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"serviceDetails\">\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon inputgroup-addon-edit-service\">Name</span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.name} name=\"name\" onChange={this.handleChange} placeholder=\"Name\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon inputgroup-addon-edit-service\">URL</span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.url} name=\"url\" onChange={this.handleChange} placeholder=\"Url\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon inputgroup-addon-edit-service\">Account</span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"text\" value={this.state.account} name=\"account\" onChange={this.handleChange} placeholder=\"Account\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon inputgroup-addon-edit-service\">Version</span>\r\n          <InputText className=\"inputtext-edit-service\" type=\"number\" value={this.state.version} name=\"version\" onChange={this.handleChange} placeholder=\"Version\" min={1} />\r\n        </div>\r\n        <div className=\"inputgroup-slider\">\r\n          <div className=\"p-inputgroup\">\r\n            <span className=\"p-inputgroup-addon inputgroup-addon-edit-service inputgroup-addon-edit-service-length\">Length</span>\r\n            <InputText className=\"inputtext-edit-service inputtext-edit-service-length\" type=\"number\" value={this.state.length} name=\"length\" onChange={this.onChangeSlider} min={8} max={100} />\r\n          </div>\r\n          <Slider value={this.state.length} style={{ width: \"262.5px\" }} onChange={this.onChangeSlider} min={8} max={100} />\r\n        </div>\r\n        <div className=\"inputswitch-group mt-3\">\r\n          <label className=\"switch-name\">Letters</label>\r\n          <InputSwitch onLabel=\"Yes\" offLabel=\"No\" checked={this.state.lowercase} onChange={(e) => this.setState({ lowercase: e.value })} />\r\n        </div>\r\n        <div className=\"inputswitch-group mt-2\">\r\n          <label className=\"switch-name\">Cap. Letters</label>\r\n          <InputSwitch onLabel=\"Yes\" offLabel=\"No\" checked={this.state.uppercase} onChange={(e) => this.setState({ uppercase: e.value })} />\r\n        </div>\r\n        <div className=\"inputswitch-group mt-2\">\r\n          <label className=\"switch-name\">Numbers</label>\r\n          <InputSwitch onLabel=\"Yes\" offLabel=\"No\" checked={this.state.numbers} onChange={(e) => this.setState({ numbers: e.value })} />\r\n        </div>\r\n        <div className=\"inputswitch-group mt-2 mb-2\">\r\n          <label className=\"switch-name\">Spec. Chararacters</label>\r\n          <InputSwitch onLabel=\"Yes\" offLabel=\"No\" checked={this.state.specialChars} onChange={(e) => this.setState({ specialChars: e.value })} />\r\n        </div>\r\n        {this.state.specialChars ?\r\n          <PickList handleCharListChanges={this.handleCharListChanges} whitelist={this.state.whitelist} blacklist={this.state.blacklist}></PickList>\r\n          : ''}\r\n        <div className=\"button-container mt-2\">\r\n          <Button className=\"mt-2\" label=\"Save\" icon=\"pi pi-check\" style={{ marginRight: '.25em' }} onClick={this.props.isOfflineMode ? this.handleSubmitOffline : this.handleSubmit} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const username = state.user.username;\r\n  const clientSessionProof = state.user.clientSessionProof;\r\n  const isOfflineMode = state.user.isOfflineMode;\r\n  return { username, clientSessionProof, isOfflineMode }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addService: service => dispatch(addService(service)),\r\n    changeService: service => dispatch(changeService(service)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceDetails);","import React from 'react';\r\nimport './serviceCard.component.sass';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from 'primereact/card';\r\nimport { Button } from 'primereact/button';\r\nimport { ContextMenu } from 'primereact/contextmenu';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport ServiceDetails from '../serviceDetails/serviceDetails.component';\r\nimport { deleteService, showMessage } from '../../../redux/actions/index';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { calculatePassword } from '../../../utilities/calculatePassword.service';\r\nimport * as axios from 'axios';\r\nimport { deleteService as deleteServiceIndexedDB } from '../../../utilities/indexeddb.service';\r\nimport { defaultTooltipOptions } from '../../../utilities/defaultTooltipOptions.service';\r\n\r\nclass ServiceCard extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (this.props.service.url) {\r\n      this.state = {\r\n        password: '',\r\n        inputType: 'password',\r\n        inputTypeIsPassword: true,\r\n        showButtonIcon: 'pi pi-eye',\r\n        copyButtonIcon: 'pi pi-copy',\r\n        serviceDetailsVisible: false,\r\n        items: [\r\n          {\r\n            label: 'Generate',\r\n            icon: 'pi pi-fw pi-external-link',\r\n            command: this.handleGeneratePassword\r\n          },\r\n          {\r\n            label: 'Show Password',\r\n            icon: 'pi pi-fw pi-eye',\r\n            command: this.handleChangeInputType\r\n          },\r\n          {\r\n            label: 'Copy',\r\n            icon: 'pi pi-fw pi-copy',\r\n            command: this.handleCopyToClipboard\r\n          },\r\n          {\r\n            label: 'Open URL',\r\n            icon: 'pi pi-fw pi-external-link',\r\n            command: this.handleOpenURL\r\n          },\r\n          {\r\n            label: 'Edit',\r\n            icon: 'pi pi-fw pi-cog',\r\n            command: this.handleDialogShow\r\n          },\r\n          {\r\n            separator: true\r\n          },\r\n          {\r\n            label: 'Delete',\r\n            icon: 'pi pi-fw pi-times',\r\n            command: this.props.isOfflineMode ? this.handleDeleteServiceOffline : this.handleDeleteService\r\n          }\r\n        ]\r\n      };\r\n    } else {\r\n      this.state = {\r\n        password: '',\r\n        inputType: 'password',\r\n        inputTypeIsPassword: true,\r\n        showButtonIcon: 'pi pi-eye',\r\n        copyButtonIcon: 'pi pi-copy',\r\n        serviceDetailsVisible: false,\r\n        items: [\r\n          {\r\n            label: 'Generate',\r\n            icon: 'pi pi-fw pi-external-link',\r\n            command: this.handleGeneratePassword\r\n          },\r\n          {\r\n            label: 'Show Password',\r\n            icon: 'pi pi-fw pi-eye',\r\n            command: this.handleChangeInputType\r\n          },\r\n          {\r\n            label: 'Copy',\r\n            icon: 'pi pi-fw pi-copy',\r\n            command: this.handleCopyToClipboard\r\n          },\r\n          {\r\n            label: 'Edit',\r\n            icon: 'pi pi-fw pi-cog',\r\n            command: this.handleDialogShow\r\n          },\r\n          {\r\n            separator: true\r\n          },\r\n          {\r\n            label: 'Delete',\r\n            icon: 'pi pi-fw pi-times',\r\n            command: this.props.isOfflineMode ? this.handleDeleteServiceOffline : this.handleDeleteService\r\n          }\r\n        ]\r\n      };\r\n    }\r\n  }\r\n\r\n  handleDialogShow = () => {\r\n    this.setState({ serviceDetailsVisible: true });\r\n  }\r\n\r\n  handleDialogHide = () => {\r\n    this.setState({ serviceDetailsVisible: false });\r\n  }\r\n\r\n  handleDeleteService = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        process.env.NODE_ENV === 'production' ? '/service/delete' : 'http://localhost:4500/service/delete',\r\n        {\r\n          username: this.props.username,\r\n          ...this.props.service,\r\n          delete: true,\r\n          clientSessionProof: this.props.clientSessionProof\r\n        },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n\r\n      if (response && response.data && response.data.deleted) {\r\n        this.props.deleteService(this.props.service);\r\n        this.props.showMessage({ severity: 'success', summary: 'Sucess', detail: 'Service deleted.' });\r\n      } else {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be deleted.' });\r\n      }\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Internal Server Error.' });\r\n    }\r\n  }\r\n\r\n  handleDeleteServiceOffline = async () => {\r\n    try {\r\n      await deleteServiceIndexedDB(this.props.service.id);\r\n      this.props.deleteService(this.props.service);\r\n      this.props.showMessage({ severity: 'success', summary: 'Sucess', detail: 'Service deleted.' });\r\n    } catch (error) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Service could not be deleted.' });\r\n    }\r\n\r\n  }\r\n\r\n  handleGeneratePassword = async () => {\r\n    let password = await calculatePassword(this.props.masterpassword, this.props.service);\r\n\r\n    if (password) {\r\n      this.setState({ password: password });\r\n    } else {\r\n      console.error('error');\r\n    }\r\n  }\r\n\r\n  handleChangeInputType = () => {\r\n    if (this.state.inputTypeIsPassword) {\r\n      this.setState({ inputType: 'text' });\r\n      this.setState({ showButtonIcon: 'pi pi-eye-slash' });\r\n      this.setState({ inputTypeIsPassword: false });\r\n      this.setState(prevState => {\r\n        const newState = { ...prevState };\r\n        newState.items[1].label = 'Hide Password';\r\n        newState.items[1].icon = 'pi pi-eye-slash';\r\n        return newState;\r\n      });\r\n    } else {\r\n      this.setState({ inputType: 'password' });\r\n      this.setState({ showButtonIcon: 'pi pi-eye' });\r\n      this.setState({ inputTypeIsPassword: true });\r\n      this.setState(prevState => {\r\n        const newState = { ...prevState };\r\n        newState.items[1].label = 'Show Password';\r\n        newState.items[1].icon = 'pi pi-eye';\r\n        return newState;\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOpenURL = () => {\r\n    window.open(this.props.service.url, '_blank');\r\n  }\r\n\r\n  handleCopyToClipboard = () => {\r\n      const el = document.createElement('textarea');\r\n      el.value = this.state.password;\r\n      document.body.appendChild(el);\r\n      el.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(el);\r\n  }\r\n\r\n  handleClearPassword = () => {\r\n    this.setState({ password: '' })\r\n  }\r\n\r\n  footer = <span>\r\n    <Button icon=\"pi pi-cog\" style={{ marginRight: '.25em' }} onClick={this.handleDialogShow} tooltip=\"Edit Service\"  tooltipOptions={defaultTooltipOptions} />\r\n    <Button icon=\"pi pi-trash\" className=\"p-button-secondary\" onClick={this.props.isOfflineMode ? this.handleDeleteServiceOffline : this.handleDeleteService} \r\n      tooltip=\"Delete Service\" tooltipOptions={defaultTooltipOptions} />\r\n  </span>;\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"serviceCard-container\" onContextMenu={(e) => this.cm.show(e)}>\r\n        {/* <div className=\"service-card-container d-inline\"> */}\r\n        <Card title={this.props.service.name} footer={this.footer} className=\"service-card\">\r\n          {this.props.service.account === '' ?\r\n            <p className=\"service-card-account service-card-account-hidden\">placeholder</p>\r\n            : <p className=\"service-card-account\">{this.props.service.account}</p>}\r\n          <InputText readOnly className=\"servicePasswordInputText\" type={this.state.inputType} value={this.state.password} />\r\n          <Button label=\"Calculate\" onClick={this.handleGeneratePassword} />\r\n          <Button icon={this.state.showButtonIcon} onClick={this.handleChangeInputType} tooltip={this.state.inputTypeIsPassword ? 'Show Password' : 'Hide Password'} \r\n            tooltipOptions={defaultTooltipOptions} />\r\n          <Button icon={this.state.copyButtonIcon} onClick={this.handleCopyToClipboard} tooltip={'Copy Password'} tooltipOptions={defaultTooltipOptions} />\r\n          <Button icon=\"pi pi-times\" onClick={this.handleClearPassword} tooltip={'Clear Password'} tooltipOptions={defaultTooltipOptions} />\r\n        </Card>\r\n        <ContextMenu model={this.state.items} ref={el => this.cm = el}></ContextMenu>\r\n        {(this.state.serviceDetailsVisible) ? /* Conditional rendering of the Dialog */\r\n          <Dialog header=\"Edit Service\" visible={this.state.serviceDetailsVisible} modal={true} onHide={this.handleDialogHide}>\r\n            <ServiceDetails service={this.props.service} handleDialogHide={this.handleDialogHide} />\r\n          </Dialog>\r\n          : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let service = state.services.find(element => {\r\n    return element.id === ownProps.id;\r\n  });\r\n\r\n  let masterpassword = state.user.password;\r\n  let username = state.user.username;\r\n  let clientSessionProof = state.user.clientSessionProof;\r\n  let isOfflineMode = state.user.isOfflineMode;\r\n\r\n  return {\r\n    service,\r\n    masterpassword,\r\n    username,\r\n    clientSessionProof,\r\n    isOfflineMode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteService: service => dispatch(deleteService(service)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceCard);\r\n","export function exportServices(services) {\r\n  const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(services));\r\n  const downloadAnchorNode = document.createElement('a');\r\n  downloadAnchorNode.setAttribute('href', dataStr);\r\n  downloadAnchorNode.setAttribute('download', 'services.json');\r\n  document.body.appendChild(downloadAnchorNode); // required for firefox\r\n  downloadAnchorNode.click();\r\n  downloadAnchorNode.remove();\r\n}\r\n\r\nexport function readFile(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    \r\n    reader.readAsBinaryString(file);\r\n    reader.onload = () => {\r\n      const fileContent = reader.result;\r\n      resolve(JSON.parse(fileContent));\r\n    };\r\n    reader.onerror = () => {\r\n      reject();\r\n    }\r\n  });\r\n}\r\n\r\n","import * as axios from 'axios';\r\n\r\nexport function sendPostRequest(url, body) {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const response = await axios.post(url, body,\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n\r\n      if (response && response.data && response.data.success) {\r\n        resolve(response.data);\r\n      } else {\r\n        reject('response not successful');\r\n      }\r\n    } catch (e) {\r\n      reject('error', e);\r\n    }\r\n  });\r\n}\r\n","import React from 'react';\r\nimport './controlBar.component.sass';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { connect } from 'react-redux';\r\nimport { addService, filterServices, showMessage } from '../../../redux/actions';\r\nimport { exportServices, readFile } from '../../../utilities/import-export.service';\r\nimport { defaultTooltipOptions } from '../../../utilities/defaultTooltipOptions.service';\r\nimport { storeService } from '../../../utilities/indexeddb.service';\r\nimport { sendPostRequest } from '../../../utilities/request.service';\r\n\r\n\r\nclass ControlBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.fileUploadInput = React.createRef();\r\n    this.dropdownContent = React.createRef();\r\n\r\n    this.state = {\r\n      keyword: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutsideDropdown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutsideDropdown);\r\n  }\r\n\r\n  handleInputTextChanges = (e) => {\r\n    this.setState({ keyword: e.target.value }, () => {\r\n      let displayedServices = [];\r\n      for (const service of this.props.services) {\r\n        if (service.name.includes(this.state.keyword)) {\r\n          displayedServices.push(service);\r\n        }\r\n      }\r\n      this.props.filterServices(displayedServices);\r\n    });\r\n  }\r\n\r\n  openUploadDialog = () => {\r\n    this.toggleDropdownMenu();\r\n    this.fileUploadInput.current.click();\r\n  }\r\n\r\n  import = async () => {\r\n    if (!this.fileUploadInput.current.files[0] || this.fileUploadInput.current.files[0].type !== 'application/json') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Upload failed!', detail: 'Invalid file type. Please upload a JSON-File.' });\r\n      return;\r\n    }\r\n    try {\r\n      let services = await readFile(this.fileUploadInput.current.files[0]);\r\n      delete services[0].id\r\n      for (const service of services) {\r\n        // send request to server\r\n        const response = await sendPostRequest(process.env.NODE_ENV === 'production' ? '/service/save' : 'http://localhost:4500/service/save', \r\n          {\r\n            username: this.props.username,\r\n            ...service,\r\n            newService: true,\r\n            clientSessionProof: this.props.clientSessionProof\r\n          })\r\n\r\n        if (response && response.id) {\r\n          service.id = response.id;\r\n          this.props.addService(service);\r\n        }\r\n      }\r\n      this.fileUploadInput.current.value = null;\r\n      this.props.showMessage({ severity: 'success', summary: 'Import complete.', detail: 'Services import successful.' });\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Upload failed!', detail: 'File could not be read.' });\r\n    }\r\n  }\r\n\r\n  importOffline = async () => {\r\n    if (!this.fileUploadInput.current.files[0] || this.fileUploadInput.current.files[0].type !== 'application/json') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Upload failed!', detail: 'Invalid file type. Please upload a JSON-File.' });\r\n      return;\r\n    }\r\n    try {\r\n      let services = await readFile(this.fileUploadInput.current.files[0]);\r\n      delete services[0].id\r\n      for (const service of services) {\r\n        delete service.id\r\n        const id = await storeService(service);\r\n        service.id = id;\r\n        this.props.addService(service);\r\n      }\r\n      this.fileUploadInput.current.value = null;\r\n      this.props.showMessage({ severity: 'success', summary: 'Import complete.', detail: 'Services import successful.' });\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Upload failed!', detail: 'File could not be read.' });\r\n    }\r\n  }\r\n\r\n\r\n  export = () => {\r\n    exportServices(this.props.services);\r\n    this.toggleDropdownMenu();\r\n  }\r\n\r\n  handleClickOutsideDropdown = (event) => {\r\n    if (!event.target.parentElement || (!event.target.parentElement.matches('.dropdown-button')\r\n      && !event.target.parentElement.matches('.dropdown-content-item'))) {\r\n      this.dropdownContent.current.classList.remove('show');\r\n    }\r\n  }\r\n\r\n  toggleDropdownMenu = () => {\r\n    if (this.dropdownContent.current.classList.contains('show')) {\r\n      this.dropdownContent.current.classList.remove('show');\r\n    } else {\r\n      this.dropdownContent.current.classList.add('show');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"control-bar\">\r\n        <div className=\"row justify-content-center control-bar-row\">\r\n          <div className=\"col-8 col-sm-8 col-md-8 col-lg-6 col-xl-3 control-bar-content\">\r\n            <Button className=\"p-button-secondary button-add\" icon=\"pi pi-plus\" onClick={this.props.handleDialogShow}\r\n              tooltip=\"Add Service\" tooltipOptions={defaultTooltipOptions} />\r\n            <input ref={this.fileUploadInput} id=\"fileUpload\" type=\"file\" accept=\"application/json\" onChange={this.props.isOfflineMode ? this.importOffline : this.import} hidden />\r\n            <div className=\"p-inputgroup control-bar-search\">\r\n              <span className=\"p-inputgroup-addon\"><i className=\"pi pi-search\"></i></span>\r\n              <InputText type=\"text\" value={this.state.keyword} name=\"keyword\" onChange={this.handleInputTextChanges} placeholder=\"Keyword\" />\r\n            </div>\r\n            <div className=\"dropdown\">\r\n              <Button icon=\"pi pi-arrow-down\" className=\"p-button-secondary dropdown-button\" onClick={this.toggleDropdownMenu} />\r\n              <div ref={this.dropdownContent} className=\"dropdown-content\">\r\n                <Button label=\"Import\" className=\"p-button-secondary dropdown-content-item\" icon=\"pi pi-upload\" onClick={this.openUploadDialog}\r\n                  tooltip=\"Import Services from JSON-File\" tooltipOptions={defaultTooltipOptions} />\r\n                <Button label=\"Export\" className=\"p-button-secondary dropdown-content-item\" icon=\"pi pi-download\" onClick={this.export}\r\n                  tooltip=\"Exports all Services to a JSON-File\" tooltipOptions={defaultTooltipOptions} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let services = [];\r\n  const username = state.user.username;\r\n  const clientSessionProof = state.user.clientSessionProof;\r\n  const isOfflineMode = state.user.isOfflineMode;\r\n  for (const service of state.services) {\r\n    services.push(service);\r\n  }\r\n  return {\r\n    services,\r\n    username,\r\n    clientSessionProof,\r\n    isOfflineMode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addService: service => dispatch(addService(service)),\r\n    filterServices: services => dispatch(filterServices(services)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);","import React from 'react';\r\nimport './services.component.sass';\r\nimport ServiceCard from './serviceCard/serviceCard.component';\r\nimport { connect } from 'react-redux';\r\nimport { deleteService } from '../../redux/actions/index';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport ServiceDetails from './serviceDetails/serviceDetails.component';\r\nimport ControlBar from './controlBar/controlBar.component';\r\n\r\nclass Services extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serviceDetailsVisible: false }\r\n  }\r\n\r\n  handleDialogShow = () => {\r\n    this.setState({ serviceDetailsVisible: true });\r\n  }\r\n\r\n  handleDialogHide = () => {\r\n    this.setState({ serviceDetailsVisible: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"services\">\r\n        <ControlBar handleDialogShow={this.handleDialogShow} />\r\n        <div className=\"servicesList\">\r\n          {this.props.services.map((service) => (\r\n            <div className=\"service\" key={service}><ServiceCard id={service} /></div>\r\n          ))}\r\n        </div>\r\n        {(this.state.serviceDetailsVisible) ? /* Conditional rendering of the Dialog */\r\n          <Dialog header=\"Add Service\" blockScroll={false} visible={this.state.serviceDetailsVisible} modal={true} onHide={this.handleDialogHide}>\r\n            <ServiceDetails newService={true} handleDialogHide={this.handleDialogHide} />\r\n          </Dialog>\r\n        : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let services = [];\r\n  for (const service of state.displayedServices) {\r\n    services.push(service.id);\r\n  }\r\n  return {\r\n    services\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    deleteService: service => dispatch(deleteService(service))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Services);","import React from 'react';\r\nimport './imprint.component.sass';\r\n\r\nclass Imprint extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <h1>Imprint works!</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Imprint;","import React from 'react';\r\nimport './timer.component.sass';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../redux/actions/index';\r\nimport IdleTimer from 'react-idle-timer';\r\n\r\nclass Timer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.idleTimer = null;\r\n    this.state = { remainingTime: '' };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.updateRemainingTime();\r\n  // }\r\n\r\n  // could be usefull for later\r\n  onAction = (e) => {\r\n    // console.log('user did something', e);\r\n  }\r\n\r\n  // could be usefull for later\r\n  onActive = (e) => {\r\n  //   console.log('user is active', e);\r\n  //   console.log('time remaining', this.idleTimer.getRemainingTime());\r\n  }\r\n\r\n  onIdle = () => {\r\n    this.props.logoutUser();\r\n  }\r\n\r\n  // updateRemainingTime = () => {\r\n  //   setInterval(() => {\r\n  //     console.log(this.idleTimer.getRemainingTime());\r\n  //     this.setState({ remainingTime: this.idleTimer.getRemainingTime });\r\n  //   }, 1000);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <IdleTimer\r\n        ref={ref => { this.idleTimer = ref }}\r\n        element={document}\r\n        onActive={this.onActive}\r\n        onIdle={this.onIdle}\r\n        onAction={this.onAction}\r\n        debounce={250}\r\n        timeout={1000 * 60 * 10} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let isAuthenticated = state.user.isAuthenticated;\r\n  return {\r\n    isAuthenticated\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: user => dispatch(logoutUser(user))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Timer));","import React from 'react';\r\nimport './user.component.sass';\r\nimport * as srp from 'secure-remote-password/client';\r\nimport * as axios from 'axios';\r\nimport * as crypto from 'crypto';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { updateUserProof, showMessage } from '../../redux/actions/index';\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mail: props.mail,\r\n      currPassword: '',\r\n      password: '',\r\n      passwordMatch: ''\r\n    }\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  }\r\n\r\n  update = async () => {\r\n\r\n    if (this.state.mail === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in your mail address.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.mail.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'The format of the mail is not correct.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.password === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please type in a password.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.passwordMatch === '') {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Please confirm your password.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.password.match(/^(?=.*[0-9])(?=.*[!\"#$%&`()*+,-./:;<=>?@[\\\\\\]^{|}~])(?=.*[A-Z])[a-zA-Z0-9!\"#$%&`()*+,-./:;<=>?@[\\\\\\]^{|}~]{8,}$/)) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Password is to weak.' });\r\n      return;\r\n    }\r\n\r\n    if (this.state.password !== this.state.passwordMatch) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Passwords do not match.' });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // generate current verifier from current password\r\n      const currkey = await this.generatePBKDF2Hash(this.state.currPassword, this.props.salt + this.props.username);\r\n      const currVerifier = srp.deriveVerifier(currkey.toString('hex'));\r\n\r\n      // generate new salt and verifier from new password\r\n      const newSalt = srp.generateSalt();\r\n      const newKey = await this.generatePBKDF2Hash(this.state.password, newSalt + this.props.username);\r\n      const newVerifier = srp.deriveVerifier(newKey.toString('hex'));\r\n\r\n      const clientEphemeral = srp.generateEphemeral()\r\n\r\n      const responseStepOne = await axios.post(\r\n        process.env.NODE_ENV === 'production' ? '/user/update' : 'http://localhost:4500/user/update',\r\n        {\r\n          step: '1',\r\n          username: this.props.username,\r\n          mail: this.state.mail,\r\n          newSalt: newSalt,\r\n          currVerifier: currVerifier,\r\n          newVerifier: newVerifier,\r\n          clientPublicEphemeral: clientEphemeral.public\r\n        },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n      console.log('res1:', responseStepOne.data);\r\n\r\n      if (!responseStepOne || !responseStepOne.data || !responseStepOne.data.stepOneComplete) {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'User data could not be updated.' });\r\n        return;\r\n      }\r\n\r\n      const clientSession = srp.deriveSession(clientEphemeral.secret, responseStepOne.data.serverEphemeral, newSalt,\r\n        this.props.username, newKey.toString('hex'));\r\n\r\n\r\n      const responseStepTwo = await axios.post(\r\n        'http://localhost:4500/user/update',\r\n        {\r\n          step: '2',\r\n          username: this.props.username,\r\n          clientSessionProof: clientSession.proof\r\n        },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      )\r\n      console.log('res2', responseStepTwo.data)\r\n\r\n      if (!responseStepTwo || !responseStepTwo.data || !responseStepTwo.data.stepTwoComplete) {\r\n        this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'res 2 User data could not be updated.' });\r\n        return;\r\n      }\r\n\r\n      srp.verifySession(clientEphemeral.public, clientSession, responseStepTwo.data.serverSessionProof);\r\n\r\n      this.props.updateUserProof(clientSession.proof);\r\n      this.setState({ currPassword: '', password: '', passwordMatch: '' });\r\n      this.props.showMessage({ severity: 'success', summary: 'Updated.', detail: 'User updated.' });\r\n\r\n    } catch (e) {\r\n      this.props.showMessage({ severity: 'error', summary: 'Error', detail: 'Internal Server Error.' });\r\n    }\r\n  }\r\n\r\n  generatePBKDF2Hash = (password, salt) => {\r\n    return new Promise((resolve, reject) => {\r\n      crypto.pbkdf2(password, salt, 100000, 32, 'sha256', (err, hash) => {\r\n        if (err) {\r\n          reject();\r\n        }\r\n        resolve(hash);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user\">\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-user\"></i>\r\n          </span>\r\n          <InputText type=\"text\" value={this.props.username} name=\"username\" disabled />\r\n        </div>\r\n        <div className=\"p-inputgroup mt-3 mb-3\">\r\n          <span className=\"p-inputgroup-addon\">@</span>\r\n          <InputText type=\"mail\" value={this.state.mail} name=\"mail\" onChange={this.handleChange} placeholder=\"E-Mail\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.currPassword} name=\"currPassword\" onChange={this.handleChange} placeholder=\"Current Password\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} placeholder=\"New Password\" />\r\n        </div>\r\n        <div className=\"p-inputgroup mb-3\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <i className=\"pi pi-key\"></i>\r\n          </span>\r\n          <InputText type=\"password\" value={this.state.passwordMatch} name=\"passwordMatch\" onChange={this.handleChange} placeholder=\"Comfirm new Password\" />\r\n        </div>\r\n        <Button label=\"Update\" icon=\"pi pi-user-edit\" onClick={this.update} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log('user_component_state:', state)\r\n  let username = state.user.username;\r\n  let mail = state.user.mail;\r\n  let salt = state.user.salt;\r\n  return {\r\n    username,\r\n    mail,\r\n    salt\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateUserProof: proof => dispatch(updateUserProof(proof)),\r\n    showMessage: content => dispatch(showMessage(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import React from 'react';\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\nimport './App.sass';\r\nimport Home from './home/home.component';\r\nimport Header from './header/header.component';\r\nimport Footer from './footer/footer.component';\r\nimport Services from './services/services.component';\r\nimport Imprint from './imprint/imprint.component';\r\nimport Timer from '../components/timer/timer.component';\r\nimport User from '../components/user/user.component';\r\nimport { connect } from 'react-redux';\r\nimport { Growl } from 'primereact/growl';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.message) {\r\n      this.growl.show(nextProps.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Timer />\r\n        <Header />\r\n        <Growl ref={(el) => { this.growl = el; }}></Growl>\r\n        <main className=\"content\">\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/imprint\" component={Imprint} />\r\n          {this.props.isAuthenticated ?\r\n            <Route path=\"/services\" component={Services} /> :\r\n            <Redirect to=\"/\" />\r\n          }\r\n          {(this.props.isAuthenticated && !this.props.isOfflineMode) ?\r\n            <Route path=\"/user\" component={User} /> :\r\n            <Redirect to=\"/\" />\r\n          }\r\n        </main>\r\n        {/* <Footer /> */}\r\n        <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossOrigin=\"anonymous\"></script>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\" crossOrigin=\"anonymous\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\" integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\" crossOrigin=\"anonymous\"></script>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let isAuthenticated = state.user.isAuthenticated;\r\n  let isOfflineMode = state.user.isOfflineMode;\r\n  let message = state.message;\r\n\r\n  return {\r\n    isAuthenticated,\r\n    isOfflineMode,\r\n    message\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { LOGIN_USER, UPDATE_USER_PROOF, LOGOUT_USER, CHANGE_SERVICE, ADD_SERVICE, DELETE_SERVICE, SET_SERVICES, SHOW_MESSAGE, FILTER_SERVICES } from '../constants/action-types'\r\n\r\n\r\nconst initState = {\r\n  user: {\r\n    username: '',\r\n    password: '',\r\n    mail: '',\r\n    salt: '',\r\n    isAuthenticated: false,\r\n    clientSessionProof: '',\r\n    isOfflineMode: false,\r\n  },\r\n  services: [],\r\n  displayedServices: [],\r\n  messages: {}\r\n}\r\n\r\nfunction rootReducer(state = initState, action) {\r\n  let user = {};\r\n  let services = [];\r\n  let displayedServices = [];\r\n  let messages = {};\r\n\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      user = action.payload\r\n      services = [...state.services];\r\n      displayedServices = [...state.services];\r\n      messages = { ...state.messages };\r\n      return {\r\n        user,\r\n        services,\r\n        displayedServices,\r\n        messages\r\n      }\r\n\r\n    case UPDATE_USER_PROOF:\r\n      console.log('reducer:', action.payload)\r\n      return Object.assign({}, state, {\r\n        user: {\r\n          ...state.user,\r\n          clientSessionProof: action.payload\r\n        }\r\n      });\r\n\r\n    case LOGOUT_USER:\r\n      return { ...initState }\r\n\r\n    case ADD_SERVICE:\r\n      return Object.assign({}, state, {\r\n        services: state.services.concat(action.payload),\r\n        displayedServices: state.displayedServices.concat(action.payload)\r\n      });\r\n\r\n    case CHANGE_SERVICE:\r\n      user = { ...state.user };\r\n      services = [...state.services];\r\n      displayedServices = [...state.displayedServices];\r\n      messages = { ...state.messages };\r\n      for (let i = 0; i < services.length; i++) {\r\n        if (services[i].id === action.payload.id) {\r\n          services[i] = action.payload;\r\n          displayedServices[i] = action.payload\r\n          return {\r\n            user,\r\n            services,\r\n            displayedServices,\r\n            messages\r\n          }\r\n        }\r\n      }\r\n      break;\r\n\r\n    case DELETE_SERVICE:\r\n      user = { ...state.user };\r\n      displayedServices = [...state.displayedServices];\r\n      messages = { ...state.messages };\r\n      // find index of element that is to be removed\r\n      const index = state.services.findIndex((service) => {\r\n        return service.id === action.payload.id;\r\n      });\r\n\r\n      const indexDS = state.displayedServices.findIndex((service) => {\r\n        return service.id === action.payload.id;\r\n      });\r\n      if (index >= 0) {\r\n        // slice array in 2 parts: left and right of the element that is to be removed\r\n        const leftArray = state.services.slice(0, index);\r\n        const rightArray = state.services.slice(index + 1, state.services.length);\r\n        const leftArrayDS = state.displayedServices.slice(0, indexDS);\r\n        const rightArrayDS = state.displayedServices.slice(indexDS + 1, state.displayedServices.length);\r\n        // concatenate left and right part again\r\n        services = leftArray.concat(rightArray);\r\n        displayedServices = leftArrayDS.concat(rightArrayDS);\r\n        return {\r\n          user,\r\n          services,\r\n          displayedServices,\r\n          messages\r\n        }\r\n      }\r\n      break;\r\n\r\n    case SET_SERVICES:\r\n      user = { ...state.user };\r\n      services = action.payload;\r\n      displayedServices = action.payload;\r\n      messages = { ...state.messages };\r\n\r\n      return {\r\n        user,\r\n        services,\r\n        displayedServices,\r\n        messages\r\n      };\r\n\r\n    case FILTER_SERVICES:\r\n      user = { ...state.user };\r\n      services = [...state.services];\r\n      displayedServices = action.payload;\r\n      messages = { ...state.messages };\r\n\r\n      return {\r\n        user,\r\n        services,\r\n        displayedServices,\r\n        messages\r\n      }\r\n\r\n    case SHOW_MESSAGE:\r\n      user = { ...state.user };\r\n      services = [...state.services];\r\n      displayedServices = [...state.displayedServices]\r\n      let message = {};\r\n      message = action.payload;\r\n\r\n      return { user, services, displayedServices, message };\r\n    default:\r\n      return state;\r\n  }\r\n  // return initial state\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.sass';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store/store';\r\n\r\n\r\n\r\nimport { addService, changeService, deleteService } from './redux/actions/index';\r\nwindow.store = store;\r\nwindow.changeService = changeService;\r\nwindow.addService = addService;\r\nwindow.deleteService = deleteService;\r\n\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}